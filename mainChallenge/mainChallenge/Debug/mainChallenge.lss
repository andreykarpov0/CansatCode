
mainChallenge.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018a  00800100  00001aee  00001b82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001aee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  0080028a  0080028a  00001d0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  00001da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fe0  00000000  00000000  00001f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001067  00000000  00000000  00003f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e40  00000000  00000000  00004f93  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000580  00000000  00000000  00005dd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000084a  00000000  00000000  00006354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018ed  00000000  00000000  00006b9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000848b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
       2:	00 00       	nop
       4:	a2 c0       	rjmp	.+324    	; 0x14a <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c0       	rjmp	.+320    	; 0x14a <__bad_interrupt>
       a:	00 00       	nop
       c:	9e c0       	rjmp	.+316    	; 0x14a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c0       	rjmp	.+312    	; 0x14a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c0       	rjmp	.+308    	; 0x14a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c0       	rjmp	.+304    	; 0x14a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c0       	rjmp	.+300    	; 0x14a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c0       	rjmp	.+296    	; 0x14a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c0       	rjmp	.+292    	; 0x14a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c0       	rjmp	.+288    	; 0x14a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c0       	rjmp	.+284    	; 0x14a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c0       	rjmp	.+280    	; 0x14a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c0       	rjmp	.+276    	; 0x14a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c0       	rjmp	.+272    	; 0x14a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c0       	rjmp	.+268    	; 0x14a <__bad_interrupt>
      3e:	00 00       	nop
      40:	84 c0       	rjmp	.+264    	; 0x14a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c0       	rjmp	.+260    	; 0x14a <__bad_interrupt>
      46:	00 00       	nop
      48:	80 c0       	rjmp	.+256    	; 0x14a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7e c0       	rjmp	.+252    	; 0x14a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c0       	rjmp	.+248    	; 0x14a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c0       	rjmp	.+244    	; 0x14a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c0       	rjmp	.+240    	; 0x14a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c0       	rjmp	.+236    	; 0x14a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c0       	rjmp	.+232    	; 0x14a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c0       	rjmp	.+228    	; 0x14a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c0       	rjmp	.+224    	; 0x14a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c0       	rjmp	.+220    	; 0x14a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c0       	rjmp	.+216    	; 0x14a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c0       	rjmp	.+212    	; 0x14a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c0       	rjmp	.+208    	; 0x14a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c0       	rjmp	.+204    	; 0x14a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c0       	rjmp	.+200    	; 0x14a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c0       	rjmp	.+196    	; 0x14a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c0       	rjmp	.+192    	; 0x14a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <BMP280_readPressure_float+0x2d2>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	12 e0       	ldi	r17, 0x02	; 2
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	ee ee       	ldi	r30, 0xEE	; 238
     122:	fa e1       	ldi	r31, 0x1A	; 26
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	aa 38       	cpi	r26, 0x8A	; 138
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	22 e0       	ldi	r18, 0x02	; 2
     136:	aa e8       	ldi	r26, 0x8A	; 138
     138:	b2 e0       	ldi	r27, 0x02	; 2
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	ae 3a       	cpi	r26, 0xAE	; 174
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	51 d5       	rcall	.+2722   	; 0xbe8 <main>
     146:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <_exit>

0000014a <__bad_interrupt>:
     14a:	5a cf       	rjmp	.-332    	; 0x0 <__vectors>

0000014c <ADXL345_searchDevice>:
#include "adxl345_i2c.h"
#include "i2c_avr.h"
uint8_t ADXL345_dev_addr;

uint8_t ADXL345_searchDevice()
{
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	1f 92       	push	r1
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62

  uint8_t device = 0x00;
     156:	19 82       	std	Y+1, r1	; 0x01
 
  I2CReadBytes(ADXL345_dev_addr, ADXL345_DEVID_REG, 1, &device);
     158:	9e 01       	movw	r18, r28
     15a:	2f 5f       	subi	r18, 0xFF	; 255
     15c:	3f 4f       	sbci	r19, 0xFF	; 255
     15e:	41 e0       	ldi	r20, 0x01	; 1
     160:	60 e0       	ldi	r22, 0x00	; 0
     162:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <__data_end>
     166:	bd d4       	rcall	.+2426   	; 0xae2 <I2CReadBytes>

  if(device == ADXL345_DEVICE){
     168:	89 81       	ldd	r24, Y+1	; 0x01
     16a:	85 3e       	cpi	r24, 0xE5	; 229
     16c:	11 f4       	brne	.+4      	; 0x172 <ADXL345_searchDevice+0x26>
    return 1;
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	01 c0       	rjmp	.+2      	; 0x174 <ADXL345_searchDevice+0x28>
  } else{
    return 0;
     172:	80 e0       	ldi	r24, 0x00	; 0
  }
}
     174:	0f 90       	pop	r0
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <ADXL345_configuration>:
  conf |= ADXL345_INT_INVERT_OFF;
  conf |= ADXL345_FULL_RES_ON;
  conf |= ADXL345_JUSTIFY_OFF;
  conf |= ADXL345_RANGE_16G;
  //ADXL345_WriteByte(ADXL345_DATA_FORMAT_REG,conf);
  I2CWriteRegister(ADXL345_dev_addr, ADXL345_DATA_FORMAT_REG, conf);
     17c:	4b e0       	ldi	r20, 0x0B	; 11
     17e:	61 e3       	ldi	r22, 0x31	; 49
     180:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <__data_end>
     184:	8f c4       	rjmp	.+2334   	; 0xaa4 <I2CWriteRegister>
     186:	08 95       	ret

00000188 <ADXL345_powerOn>:
  power |= ADXL345_MEASURE_ON;
  power |= ADXL345_SLEEP_OFF;
  power |= ADXL345_WAKEUP_8HZ;

  //ADXL345_WriteByte(ADXL345_POWER_CTL_REG,power);
  I2CWriteRegister(ADXL345_dev_addr, ADXL345_POWER_CTL_REG, power);
     188:	48 e0       	ldi	r20, 0x08	; 8
     18a:	6d e2       	ldi	r22, 0x2D	; 45
     18c:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <__data_end>
     190:	89 c4       	rjmp	.+2322   	; 0xaa4 <I2CWriteRegister>
     192:	08 95       	ret

00000194 <ADXL345_begin>:
}

uint8_t ADXL345_begin(uint8_t devaddr) 
{
  ADXL345_dev_addr  = devaddr;
     194:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <__data_end>
  if (!ADXL345_searchDevice()) return 0;
     198:	d9 df       	rcall	.-78     	; 0x14c <ADXL345_searchDevice>
     19a:	88 23       	and	r24, r24
     19c:	41 f0       	breq	.+16     	; 0x1ae <ADXL345_begin+0x1a>
 
 //ADXL345_WriteByte(ADXL345_BW_RATE_REG,ADXL345_BW_RATE_25);
  I2CWriteRegister(ADXL345_dev_addr, ADXL345_BW_RATE_REG, ADXL345_BW_RATE_25);
     19e:	48 e0       	ldi	r20, 0x08	; 8
     1a0:	6c e2       	ldi	r22, 0x2C	; 44
     1a2:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <__data_end>
  ADXL345_configuration();
     1a6:	7e d4       	rcall	.+2300   	; 0xaa4 <I2CWriteRegister>
     1a8:	e9 df       	rcall	.-46     	; 0x17c <ADXL345_configuration>
  ADXL345_powerOn();
     1aa:	ee df       	rcall	.-36     	; 0x188 <ADXL345_powerOn>
     1ac:	81 e0       	ldi	r24, 0x01	; 1

  return 1;
     1ae:	08 95       	ret

000001b0 <ADXL345_readXYZ_raw>:
}
     1b0:	cf 92       	push	r12


void ADXL345_readXYZ_raw(int *x, int *y, int *z)
{
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	00 d0       	rcall	.+0      	; 0x1c2 <ADXL345_readXYZ_raw+0x12>
     1c2:	00 d0       	rcall	.+0      	; 0x1c4 <ADXL345_readXYZ_raw+0x14>
     1c4:	00 d0       	rcall	.+0      	; 0x1c6 <ADXL345_readXYZ_raw+0x16>
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62
     1ca:	6c 01       	movw	r12, r24
     1cc:	7b 01       	movw	r14, r22
     1ce:	8a 01       	movw	r16, r20
//  uint8_t i=0;
  uint8_t axis_buff[6];

  //ADXL345_ReadBytes(0x32,6,axis_buff);
  I2CReadBytes(ADXL345_dev_addr, 0x32, 6, axis_buff);
     1d0:	9e 01       	movw	r18, r28
     1d2:	2f 5f       	subi	r18, 0xFF	; 255
     1d4:	3f 4f       	sbci	r19, 0xFF	; 255
     1d6:	46 e0       	ldi	r20, 0x06	; 6
     1d8:	62 e3       	ldi	r22, 0x32	; 50
     1da:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <__data_end>
     1de:	81 d4       	rcall	.+2306   	; 0xae2 <I2CReadBytes>
  
  *x = (((int)axis_buff[1]) << 8) | axis_buff[0];
     1e0:	8a 81       	ldd	r24, Y+2	; 0x02
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	98 2f       	mov	r25, r24
     1e6:	88 27       	eor	r24, r24
     1e8:	29 81       	ldd	r18, Y+1	; 0x01
     1ea:	82 2b       	or	r24, r18
     1ec:	f6 01       	movw	r30, r12
     1ee:	91 83       	std	Z+1, r25	; 0x01
     1f0:	80 83       	st	Z, r24
  *y = (((int)axis_buff[3]) << 8) | axis_buff[2];
     1f2:	8c 81       	ldd	r24, Y+4	; 0x04
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	98 2f       	mov	r25, r24
     1f8:	88 27       	eor	r24, r24
     1fa:	2b 81       	ldd	r18, Y+3	; 0x03
     1fc:	82 2b       	or	r24, r18
     1fe:	f7 01       	movw	r30, r14
     200:	91 83       	std	Z+1, r25	; 0x01
     202:	80 83       	st	Z, r24
  *z = (((int)axis_buff[5]) << 8) | axis_buff[4];
     204:	8e 81       	ldd	r24, Y+6	; 0x06
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	98 2f       	mov	r25, r24
     20a:	88 27       	eor	r24, r24
     20c:	2d 81       	ldd	r18, Y+5	; 0x05
     20e:	82 2b       	or	r24, r18
     210:	f8 01       	movw	r30, r16
     212:	91 83       	std	Z+1, r25	; 0x01
     214:	80 83       	st	Z, r24
}
     216:	26 96       	adiw	r28, 0x06	; 6
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	ef 90       	pop	r14
     22e:	df 90       	pop	r13
     230:	cf 90       	pop	r12
     232:	08 95       	ret

00000234 <BMP280_write8>:
    }
    var1 = (((BMP280_S32_t)dig_P9) * ((BMP280_S32_t)(((p>>3) * (p>>3))>>13)))>>12;
    var2 = (((BMP280_S32_t)(p>>2)) * ((BMP280_S32_t)dig_P8))>>13;
    p = (BMP280_U32_t)((BMP280_S32_t)p + ((var1 + var2 + dig_P7) >> 4));
    return p;
}
     234:	46 2f       	mov	r20, r22
     236:	68 2f       	mov	r22, r24
     238:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <BMP280_dev_addr>
     23c:	33 c4       	rjmp	.+2150   	; 0xaa4 <I2CWriteRegister>
     23e:	08 95       	ret

00000240 <BMP280_read8>:
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	1f 92       	push	r1
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
     24a:	9e 01       	movw	r18, r28
     24c:	2f 5f       	subi	r18, 0xFF	; 255
     24e:	3f 4f       	sbci	r19, 0xFF	; 255
     250:	41 e0       	ldi	r20, 0x01	; 1
     252:	68 2f       	mov	r22, r24
     254:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <BMP280_dev_addr>
     258:	44 d4       	rcall	.+2184   	; 0xae2 <I2CReadBytes>
     25a:	89 81       	ldd	r24, Y+1	; 0x01
     25c:	0f 90       	pop	r0
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	08 95       	ret

00000264 <BMP280_read16>:
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	00 d0       	rcall	.+0      	; 0x26a <BMP280_read16+0x6>
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	9e 01       	movw	r18, r28
     270:	2f 5f       	subi	r18, 0xFF	; 255
     272:	3f 4f       	sbci	r19, 0xFF	; 255
     274:	42 e0       	ldi	r20, 0x02	; 2
     276:	68 2f       	mov	r22, r24
     278:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <BMP280_dev_addr>
     27c:	32 d4       	rcall	.+2148   	; 0xae2 <I2CReadBytes>
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	98 2f       	mov	r25, r24
     284:	88 27       	eor	r24, r24
     286:	2a 81       	ldd	r18, Y+2	; 0x02
     288:	82 2b       	or	r24, r18
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <BMP280_read16_LE>:
     294:	e7 df       	rcall	.-50     	; 0x264 <BMP280_read16>
     296:	98 27       	eor	r25, r24
     298:	89 27       	eor	r24, r25
     29a:	98 27       	eor	r25, r24
     29c:	08 95       	ret

0000029e <BMP280_readS16_LE>:
     29e:	fa cf       	rjmp	.-12     	; 0x294 <BMP280_read16_LE>
     2a0:	08 95       	ret

000002a2 <BMP280_read24>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	00 d0       	rcall	.+0      	; 0x2a8 <BMP280_read24+0x6>
     2a8:	1f 92       	push	r1
     2aa:	cd b7       	in	r28, 0x3d	; 61
     2ac:	de b7       	in	r29, 0x3e	; 62
     2ae:	9e 01       	movw	r18, r28
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	43 e0       	ldi	r20, 0x03	; 3
     2b6:	68 2f       	mov	r22, r24
     2b8:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <BMP280_dev_addr>
     2bc:	12 d4       	rcall	.+2084   	; 0xae2 <I2CReadBytes>
     2be:	69 81       	ldd	r22, Y+1	; 0x01
     2c0:	86 2f       	mov	r24, r22
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	a0 e0       	ldi	r26, 0x00	; 0
     2c6:	b0 e0       	ldi	r27, 0x00	; 0
     2c8:	ba 2f       	mov	r27, r26
     2ca:	a9 2f       	mov	r26, r25
     2cc:	98 2f       	mov	r25, r24
     2ce:	88 27       	eor	r24, r24
     2d0:	2a 81       	ldd	r18, Y+2	; 0x02
     2d2:	82 2b       	or	r24, r18
     2d4:	ba 2f       	mov	r27, r26
     2d6:	a9 2f       	mov	r26, r25
     2d8:	98 2f       	mov	r25, r24
     2da:	88 27       	eor	r24, r24
     2dc:	2b 81       	ldd	r18, Y+3	; 0x03
     2de:	bc 01       	movw	r22, r24
     2e0:	cd 01       	movw	r24, r26
     2e2:	62 2b       	or	r22, r18
     2e4:	0f 90       	pop	r0
     2e6:	0f 90       	pop	r0
     2e8:	0f 90       	pop	r0
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	08 95       	ret

000002f0 <BMP280_readCoefficients>:
     2f0:	88 e8       	ldi	r24, 0x88	; 136
     2f2:	d0 df       	rcall	.-96     	; 0x294 <BMP280_read16_LE>
     2f4:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <dig_T1+0x1>
     2f8:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <dig_T1>
     2fc:	8a e8       	ldi	r24, 0x8A	; 138
     2fe:	cf df       	rcall	.-98     	; 0x29e <BMP280_readS16_LE>
     300:	90 93 90 02 	sts	0x0290, r25	; 0x800290 <dig_T2+0x1>
     304:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <dig_T2>
     308:	8c e8       	ldi	r24, 0x8C	; 140
     30a:	c9 df       	rcall	.-110    	; 0x29e <BMP280_readS16_LE>
     30c:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <dig_T3+0x1>
     310:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <dig_T3>
     314:	8e e8       	ldi	r24, 0x8E	; 142
     316:	be df       	rcall	.-132    	; 0x294 <BMP280_read16_LE>
     318:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <dig_P1+0x1>
     31c:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <dig_P1>
     320:	80 e9       	ldi	r24, 0x90	; 144
     322:	bd df       	rcall	.-134    	; 0x29e <BMP280_readS16_LE>
     324:	90 93 92 02 	sts	0x0292, r25	; 0x800292 <dig_P2+0x1>
     328:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <dig_P2>
     32c:	82 e9       	ldi	r24, 0x92	; 146
     32e:	b7 df       	rcall	.-146    	; 0x29e <BMP280_readS16_LE>
     330:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <dig_P3+0x1>
     334:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <dig_P3>
     338:	84 e9       	ldi	r24, 0x94	; 148
     33a:	b1 df       	rcall	.-158    	; 0x29e <BMP280_readS16_LE>
     33c:	90 93 94 02 	sts	0x0294, r25	; 0x800294 <dig_P4+0x1>
     340:	80 93 93 02 	sts	0x0293, r24	; 0x800293 <dig_P4>
     344:	86 e9       	ldi	r24, 0x96	; 150
     346:	ab df       	rcall	.-170    	; 0x29e <BMP280_readS16_LE>
     348:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <dig_P5+0x1>
     34c:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <dig_P5>
     350:	88 e9       	ldi	r24, 0x98	; 152
     352:	a5 df       	rcall	.-182    	; 0x29e <BMP280_readS16_LE>
     354:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <dig_P6+0x1>
     358:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <dig_P6>
     35c:	8a e9       	ldi	r24, 0x9A	; 154
     35e:	9f df       	rcall	.-194    	; 0x29e <BMP280_readS16_LE>
     360:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <dig_P7+0x1>
     364:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <dig_P7>
     368:	8c e9       	ldi	r24, 0x9C	; 156
     36a:	99 df       	rcall	.-206    	; 0x29e <BMP280_readS16_LE>
     36c:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <dig_P8+0x1>
     370:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <dig_P8>
     374:	8e e9       	ldi	r24, 0x9E	; 158
     376:	93 df       	rcall	.-218    	; 0x29e <BMP280_readS16_LE>
     378:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <dig_P9+0x1>
     37c:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <dig_P9>
     380:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <dig_T1+0x1>
     384:	8f 93       	push	r24
     386:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <dig_T1>
     38a:	8f 93       	push	r24
     38c:	8e e0       	ldi	r24, 0x0E	; 14
     38e:	91 e0       	ldi	r25, 0x01	; 1
     390:	9f 93       	push	r25
     392:	8f 93       	push	r24
     394:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     398:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <dig_T2+0x1>
     39c:	8f 93       	push	r24
     39e:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <dig_T2>
     3a2:	8f 93       	push	r24
     3a4:	8c e1       	ldi	r24, 0x1C	; 28
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	9f 93       	push	r25
     3aa:	8f 93       	push	r24
     3ac:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     3b0:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <dig_T3+0x1>
     3b4:	8f 93       	push	r24
     3b6:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <dig_T3>
     3ba:	8f 93       	push	r24
     3bc:	89 e2       	ldi	r24, 0x29	; 41
     3be:	91 e0       	ldi	r25, 0x01	; 1
     3c0:	9f 93       	push	r25
     3c2:	8f 93       	push	r24
     3c4:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     3c8:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <dig_P1+0x1>
     3cc:	8f 93       	push	r24
     3ce:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <dig_P1>
     3d2:	8f 93       	push	r24
     3d4:	86 e3       	ldi	r24, 0x36	; 54
     3d6:	91 e0       	ldi	r25, 0x01	; 1
     3d8:	9f 93       	push	r25
     3da:	8f 93       	push	r24
     3dc:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     3e0:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <dig_P2+0x1>
     3e4:	8f 93       	push	r24
     3e6:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <dig_P2>
     3ea:	8f 93       	push	r24
     3ec:	83 e4       	ldi	r24, 0x43	; 67
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
     3f4:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     3f8:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <dig_P3+0x1>
     3fc:	8f 93       	push	r24
     3fe:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <dig_P3>
     402:	8f 93       	push	r24
     404:	80 e5       	ldi	r24, 0x50	; 80
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	9f 93       	push	r25
     40a:	8f 93       	push	r24
     40c:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     410:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <dig_P4+0x1>
     414:	8f 93       	push	r24
     416:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <dig_P4>
     41a:	8f 93       	push	r24
     41c:	8d e5       	ldi	r24, 0x5D	; 93
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	9f 93       	push	r25
     422:	8f 93       	push	r24
     424:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     428:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <dig_P5+0x1>
     42c:	8f 93       	push	r24
     42e:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <dig_P5>
     432:	8f 93       	push	r24
     434:	8a e6       	ldi	r24, 0x6A	; 106
     436:	91 e0       	ldi	r25, 0x01	; 1
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     440:	8d b7       	in	r24, 0x3d	; 61
     442:	9e b7       	in	r25, 0x3e	; 62
     444:	80 96       	adiw	r24, 0x20	; 32
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	9e bf       	out	0x3e, r25	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	8d bf       	out	0x3d, r24	; 61
     450:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <dig_P6+0x1>
     454:	8f 93       	push	r24
     456:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <dig_P6>
     45a:	8f 93       	push	r24
     45c:	87 e7       	ldi	r24, 0x77	; 119
     45e:	91 e0       	ldi	r25, 0x01	; 1
     460:	9f 93       	push	r25
     462:	8f 93       	push	r24
     464:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     468:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <dig_P7+0x1>
     46c:	8f 93       	push	r24
     46e:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <dig_P7>
     472:	8f 93       	push	r24
     474:	84 e8       	ldi	r24, 0x84	; 132
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     480:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <dig_P8+0x1>
     484:	8f 93       	push	r24
     486:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <dig_P8>
     48a:	8f 93       	push	r24
     48c:	81 e9       	ldi	r24, 0x91	; 145
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	9f 93       	push	r25
     492:	8f 93       	push	r24
     494:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     498:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <dig_P9+0x1>
     49c:	8f 93       	push	r24
     49e:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <dig_P9>
     4a2:	8f 93       	push	r24
     4a4:	8e e9       	ldi	r24, 0x9E	; 158
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	9f 93       	push	r25
     4aa:	8f 93       	push	r24
     4ac:	0e 94 85 0a 	call	0x150a	; 0x150a <printf>
     4b0:	8d b7       	in	r24, 0x3d	; 61
     4b2:	9e b7       	in	r25, 0x3e	; 62
     4b4:	40 96       	adiw	r24, 0x10	; 16
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	f8 94       	cli
     4ba:	9e bf       	out	0x3e, r25	; 62
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	8d bf       	out	0x3d, r24	; 61
     4c0:	08 95       	ret

000004c2 <BMP280_begin>:
     4c2:	cf 93       	push	r28
     4c4:	c8 2f       	mov	r28, r24
     4c6:	8b ea       	ldi	r24, 0xAB	; 171
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 98 0a 	call	0x1530	; 0x1530 <puts>
     4ce:	c0 93 95 02 	sts	0x0295, r28	; 0x800295 <BMP280_dev_addr>
     4d2:	80 eb       	ldi	r24, 0xB0	; 176
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	0e 94 98 0a 	call	0x1530	; 0x1530 <puts>
     4da:	80 ed       	ldi	r24, 0xD0	; 208
     4dc:	b1 de       	rcall	.-670    	; 0x240 <BMP280_read8>
     4de:	88 35       	cpi	r24, 0x58	; 88
     4e0:	81 f4       	brne	.+32     	; 0x502 <BMP280_begin+0x40>
     4e2:	83 ed       	ldi	r24, 0xD3	; 211
     4e4:	91 e0       	ldi	r25, 0x01	; 1
     4e6:	0e 94 98 0a 	call	0x1530	; 0x1530 <puts>
     4ea:	02 df       	rcall	.-508    	; 0x2f0 <BMP280_readCoefficients>
     4ec:	81 ee       	ldi	r24, 0xE1	; 225
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 98 0a 	call	0x1530	; 0x1530 <puts>
     4f4:	68 e6       	ldi	r22, 0x68	; 104
     4f6:	85 ef       	ldi	r24, 0xF5	; 245
     4f8:	9d de       	rcall	.-710    	; 0x234 <BMP280_write8>
     4fa:	85 ef       	ldi	r24, 0xF5	; 245
     4fc:	a1 de       	rcall	.-702    	; 0x240 <BMP280_read8>
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	01 c0       	rjmp	.+2      	; 0x504 <BMP280_begin+0x42>
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <BMP280_readTemperature>:
     508:	4f 92       	push	r4
     50a:	5f 92       	push	r5
     50c:	6f 92       	push	r6
     50e:	7f 92       	push	r7
     510:	8f 92       	push	r8
     512:	9f 92       	push	r9
     514:	af 92       	push	r10
     516:	bf 92       	push	r11
     518:	cf 92       	push	r12
     51a:	df 92       	push	r13
     51c:	ef 92       	push	r14
     51e:	ff 92       	push	r15
     520:	8a ef       	ldi	r24, 0xFA	; 250
     522:	bf de       	rcall	.-642    	; 0x2a2 <BMP280_read24>
     524:	6b 01       	movw	r12, r22
     526:	7c 01       	movw	r14, r24
     528:	ab 01       	movw	r20, r22
     52a:	bc 01       	movw	r22, r24
     52c:	68 94       	set
     52e:	16 f8       	bld	r1, 6
     530:	75 95       	asr	r23
     532:	67 95       	ror	r22
     534:	57 95       	ror	r21
     536:	47 95       	ror	r20
     538:	16 94       	lsr	r1
     53a:	d1 f7       	brne	.-12     	; 0x530 <BMP280_readTemperature+0x28>
     53c:	40 90 8d 02 	lds	r4, 0x028D	; 0x80028d <dig_T1>
     540:	50 90 8e 02 	lds	r5, 0x028E	; 0x80028e <dig_T1+0x1>
     544:	61 2c       	mov	r6, r1
     546:	71 2c       	mov	r7, r1
     548:	d3 01       	movw	r26, r6
     54a:	c2 01       	movw	r24, r4
     54c:	88 0f       	add	r24, r24
     54e:	99 1f       	adc	r25, r25
     550:	aa 1f       	adc	r26, r26
     552:	bb 1f       	adc	r27, r27
     554:	9a 01       	movw	r18, r20
     556:	ab 01       	movw	r20, r22
     558:	28 1b       	sub	r18, r24
     55a:	39 0b       	sbc	r19, r25
     55c:	4a 0b       	sbc	r20, r26
     55e:	5b 0b       	sbc	r21, r27
     560:	a0 91 8f 02 	lds	r26, 0x028F	; 0x80028f <dig_T2>
     564:	b0 91 90 02 	lds	r27, 0x0290	; 0x800290 <dig_T2+0x1>
     568:	bb d7       	rcall	.+3958   	; 0x14e0 <__mulshisi3>
     56a:	4b 01       	movw	r8, r22
     56c:	5c 01       	movw	r10, r24
     56e:	07 2e       	mov	r0, r23
     570:	7b e0       	ldi	r23, 0x0B	; 11
     572:	b5 94       	asr	r11
     574:	a7 94       	ror	r10
     576:	97 94       	ror	r9
     578:	87 94       	ror	r8
     57a:	7a 95       	dec	r23
     57c:	d1 f7       	brne	.-12     	; 0x572 <BMP280_readTemperature+0x6a>
     57e:	70 2d       	mov	r23, r0
     580:	bb 27       	eor	r27, r27
     582:	f7 fc       	sbrc	r15, 7
     584:	ba 95       	dec	r27
     586:	af 2d       	mov	r26, r15
     588:	9e 2d       	mov	r25, r14
     58a:	8d 2d       	mov	r24, r13
     58c:	bc 01       	movw	r22, r24
     58e:	cd 01       	movw	r24, r26
     590:	64 19       	sub	r22, r4
     592:	75 09       	sbc	r23, r5
     594:	86 09       	sbc	r24, r6
     596:	97 09       	sbc	r25, r7
     598:	9b 01       	movw	r18, r22
     59a:	ac 01       	movw	r20, r24
     59c:	4a d7       	rcall	.+3732   	; 0x1432 <__mulsi3>
     59e:	9b 01       	movw	r18, r22
     5a0:	ac 01       	movw	r20, r24
     5a2:	01 2e       	mov	r0, r17
     5a4:	1c e0       	ldi	r17, 0x0C	; 12
     5a6:	55 95       	asr	r21
     5a8:	47 95       	ror	r20
     5aa:	37 95       	ror	r19
     5ac:	27 95       	ror	r18
     5ae:	1a 95       	dec	r17
     5b0:	d1 f7       	brne	.-12     	; 0x5a6 <BMP280_readTemperature+0x9e>
     5b2:	10 2d       	mov	r17, r0
     5b4:	a0 91 a0 02 	lds	r26, 0x02A0	; 0x8002a0 <dig_T3>
     5b8:	b0 91 a1 02 	lds	r27, 0x02A1	; 0x8002a1 <dig_T3+0x1>
     5bc:	91 d7       	rcall	.+3874   	; 0x14e0 <__mulshisi3>
     5be:	dc 01       	movw	r26, r24
     5c0:	cb 01       	movw	r24, r22
     5c2:	07 2e       	mov	r0, r23
     5c4:	7e e0       	ldi	r23, 0x0E	; 14
     5c6:	b5 95       	asr	r27
     5c8:	a7 95       	ror	r26
     5ca:	97 95       	ror	r25
     5cc:	87 95       	ror	r24
     5ce:	7a 95       	dec	r23
     5d0:	d1 f7       	brne	.-12     	; 0x5c6 <BMP280_readTemperature+0xbe>
     5d2:	70 2d       	mov	r23, r0
     5d4:	88 0d       	add	r24, r8
     5d6:	99 1d       	adc	r25, r9
     5d8:	aa 1d       	adc	r26, r10
     5da:	bb 1d       	adc	r27, r11
     5dc:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <t_fine>
     5e0:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <t_fine+0x1>
     5e4:	a0 93 a6 02 	sts	0x02A6, r26	; 0x8002a6 <t_fine+0x2>
     5e8:	b0 93 a7 02 	sts	0x02A7, r27	; 0x8002a7 <t_fine+0x3>
     5ec:	6c 01       	movw	r12, r24
     5ee:	7d 01       	movw	r14, r26
     5f0:	cc 0c       	add	r12, r12
     5f2:	dd 1c       	adc	r13, r13
     5f4:	ee 1c       	adc	r14, r14
     5f6:	ff 1c       	adc	r15, r15
     5f8:	cc 0c       	add	r12, r12
     5fa:	dd 1c       	adc	r13, r13
     5fc:	ee 1c       	adc	r14, r14
     5fe:	ff 1c       	adc	r15, r15
     600:	8c 0d       	add	r24, r12
     602:	9d 1d       	adc	r25, r13
     604:	ae 1d       	adc	r26, r14
     606:	bf 1d       	adc	r27, r15
     608:	80 58       	subi	r24, 0x80	; 128
     60a:	9f 4f       	sbci	r25, 0xFF	; 255
     60c:	af 4f       	sbci	r26, 0xFF	; 255
     60e:	bf 4f       	sbci	r27, 0xFF	; 255
     610:	69 2f       	mov	r22, r25
     612:	7a 2f       	mov	r23, r26
     614:	8b 2f       	mov	r24, r27
     616:	99 27       	eor	r25, r25
     618:	87 fd       	sbrc	r24, 7
     61a:	9a 95       	dec	r25
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	df 90       	pop	r13
     622:	cf 90       	pop	r12
     624:	bf 90       	pop	r11
     626:	af 90       	pop	r10
     628:	9f 90       	pop	r9
     62a:	8f 90       	pop	r8
     62c:	7f 90       	pop	r7
     62e:	6f 90       	pop	r6
     630:	5f 90       	pop	r5
     632:	4f 90       	pop	r4
     634:	08 95       	ret

00000636 <BMP280_readPressure_float>:

void BMP280_readPressure_float(int32_t *temperature,float *pressure)
{
     636:	4f 92       	push	r4
     638:	5f 92       	push	r5
     63a:	6f 92       	push	r6
     63c:	7f 92       	push	r7
     63e:	8f 92       	push	r8
     640:	9f 92       	push	r9
     642:	af 92       	push	r10
     644:	bf 92       	push	r11
     646:	cf 92       	push	r12
     648:	df 92       	push	r13
     64a:	ef 92       	push	r14
     64c:	ff 92       	push	r15
     64e:	cf 93       	push	r28
     650:	df 93       	push	r29
     652:	00 d0       	rcall	.+0      	; 0x654 <BMP280_readPressure_float+0x1e>
     654:	00 d0       	rcall	.+0      	; 0x656 <BMP280_readPressure_float+0x20>
     656:	00 d0       	rcall	.+0      	; 0x658 <BMP280_readPressure_float+0x22>
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
     65c:	7c 01       	movw	r14, r24
     65e:	7e 83       	std	Y+6, r23	; 0x06
     660:	6d 83       	std	Y+5, r22	; 0x05
    float var1, var2;
    int32_t adc_P;
    
    *temperature = BMP280_readTemperature();
     662:	52 df       	rcall	.-348    	; 0x508 <BMP280_readTemperature>
     664:	f7 01       	movw	r30, r14
     666:	60 83       	st	Z, r22
     668:	71 83       	std	Z+1, r23	; 0x01
     66a:	82 83       	std	Z+2, r24	; 0x02
     66c:	93 83       	std	Z+3, r25	; 0x03

    adc_P = BMP280_read24(BMP280_REGISTER_PRESSUREDATA);
     66e:	87 ef       	ldi	r24, 0xF7	; 247
     670:	18 de       	rcall	.-976    	; 0x2a2 <BMP280_read24>
    //printf("adc_P = %ld\n", adc_P);
    adc_P >>= 4;
     672:	2b 01       	movw	r4, r22
     674:	3c 01       	movw	r6, r24
     676:	68 94       	set
     678:	13 f8       	bld	r1, 3
     67a:	75 94       	asr	r7
     67c:	67 94       	ror	r6
     67e:	57 94       	ror	r5
     680:	47 94       	ror	r4
     682:	16 94       	lsr	r1
     684:	d1 f7       	brne	.-12     	; 0x67a <BMP280_readPressure_float+0x44>
    
    var1 = ((float)t_fine/2.0)-64000.0;
     686:	60 91 a4 02 	lds	r22, 0x02A4	; 0x8002a4 <t_fine>
     68a:	70 91 a5 02 	lds	r23, 0x02A5	; 0x8002a5 <t_fine+0x1>
     68e:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <t_fine+0x2>
     692:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <t_fine+0x3>
     696:	55 d4       	rcall	.+2218   	; 0xf42 <__floatsisf>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	40 e0       	ldi	r20, 0x00	; 0
     69e:	5f e3       	ldi	r21, 0x3F	; 63
     6a0:	00 d5       	rcall	.+2560   	; 0x10a2 <__mulsf3>
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	4a e7       	ldi	r20, 0x7A	; 122
     6a8:	57 e4       	ldi	r21, 0x47	; 71
     6aa:	78 d3       	rcall	.+1776   	; 0xd9c <__subsf3>
     6ac:	6b 01       	movw	r12, r22
     6ae:	7c 01       	movw	r14, r24
    var2 = var1 * var1 * ((float)dig_P6) / 32768.0;
     6b0:	9b 01       	movw	r18, r22
     6b2:	ac 01       	movw	r20, r24
     6b4:	f6 d4       	rcall	.+2540   	; 0x10a2 <__mulsf3>
     6b6:	4b 01       	movw	r8, r22
     6b8:	5c 01       	movw	r10, r24
     6ba:	60 91 a2 02 	lds	r22, 0x02A2	; 0x8002a2 <dig_P6>
     6be:	70 91 a3 02 	lds	r23, 0x02A3	; 0x8002a3 <dig_P6+0x1>
     6c2:	07 2e       	mov	r0, r23
     6c4:	00 0c       	add	r0, r0
     6c6:	88 0b       	sbc	r24, r24
     6c8:	99 0b       	sbc	r25, r25
     6ca:	3b d4       	rcall	.+2166   	; 0xf42 <__floatsisf>
     6cc:	9b 01       	movw	r18, r22
     6ce:	ac 01       	movw	r20, r24
     6d0:	c5 01       	movw	r24, r10
     6d2:	b4 01       	movw	r22, r8
     6d4:	e6 d4       	rcall	.+2508   	; 0x10a2 <__mulsf3>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 e0       	ldi	r20, 0x00	; 0
     6dc:	58 e3       	ldi	r21, 0x38	; 56
     6de:	e1 d4       	rcall	.+2498   	; 0x10a2 <__mulsf3>
     6e0:	4b 01       	movw	r8, r22
     6e2:	5c 01       	movw	r10, r24
     6e4:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <dig_P5>
    var2 = var2 + var1 * ((float)dig_P5) * 2.0;
     6e8:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <dig_P5+0x1>
     6ec:	07 2e       	mov	r0, r23
     6ee:	00 0c       	add	r0, r0
     6f0:	88 0b       	sbc	r24, r24
     6f2:	99 0b       	sbc	r25, r25
     6f4:	26 d4       	rcall	.+2124   	; 0xf42 <__floatsisf>
     6f6:	9b 01       	movw	r18, r22
     6f8:	ac 01       	movw	r20, r24
     6fa:	c7 01       	movw	r24, r14
     6fc:	b6 01       	movw	r22, r12
     6fe:	d1 d4       	rcall	.+2466   	; 0x10a2 <__mulsf3>
     700:	9b 01       	movw	r18, r22
     702:	ac 01       	movw	r20, r24
     704:	4c d3       	rcall	.+1688   	; 0xd9e <__addsf3>
     706:	9b 01       	movw	r18, r22
     708:	ac 01       	movw	r20, r24
     70a:	c5 01       	movw	r24, r10
     70c:	b4 01       	movw	r22, r8
     70e:	47 d3       	rcall	.+1678   	; 0xd9e <__addsf3>
     710:	20 e0       	ldi	r18, 0x00	; 0
    var2 = (var2/4.0)+(((float)dig_P4) * 65536.0);
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 e8       	ldi	r20, 0x80	; 128
     716:	5e e3       	ldi	r21, 0x3E	; 62
     718:	c4 d4       	rcall	.+2440   	; 0x10a2 <__mulsf3>
     71a:	4b 01       	movw	r8, r22
     71c:	5c 01       	movw	r10, r24
     71e:	60 91 93 02 	lds	r22, 0x0293	; 0x800293 <dig_P4>
     722:	70 91 94 02 	lds	r23, 0x0294	; 0x800294 <dig_P4+0x1>
     726:	07 2e       	mov	r0, r23
     728:	00 0c       	add	r0, r0
     72a:	88 0b       	sbc	r24, r24
     72c:	99 0b       	sbc	r25, r25
     72e:	09 d4       	rcall	.+2066   	; 0xf42 <__floatsisf>
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	40 e8       	ldi	r20, 0x80	; 128
     736:	57 e4       	ldi	r21, 0x47	; 71
     738:	b4 d4       	rcall	.+2408   	; 0x10a2 <__mulsf3>
     73a:	9b 01       	movw	r18, r22
     73c:	ac 01       	movw	r20, r24
     73e:	c5 01       	movw	r24, r10
     740:	b4 01       	movw	r22, r8
     742:	2d d3       	rcall	.+1626   	; 0xd9e <__addsf3>
     744:	69 83       	std	Y+1, r22	; 0x01
     746:	7a 83       	std	Y+2, r23	; 0x02
     748:	8b 83       	std	Y+3, r24	; 0x03
     74a:	9c 83       	std	Y+4, r25	; 0x04
     74c:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <dig_P3>
    var1 = (((float)dig_P3) * var1 * var1 / 524288.0 + ((float)dig_P2) * var1) / 524288.0;
     750:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <dig_P3+0x1>
     754:	07 2e       	mov	r0, r23
     756:	00 0c       	add	r0, r0
     758:	88 0b       	sbc	r24, r24
     75a:	99 0b       	sbc	r25, r25
     75c:	f2 d3       	rcall	.+2020   	; 0xf42 <__floatsisf>
     75e:	9b 01       	movw	r18, r22
     760:	ac 01       	movw	r20, r24
     762:	c7 01       	movw	r24, r14
     764:	b6 01       	movw	r22, r12
     766:	9d d4       	rcall	.+2362   	; 0x10a2 <__mulsf3>
     768:	9b 01       	movw	r18, r22
     76a:	ac 01       	movw	r20, r24
     76c:	c7 01       	movw	r24, r14
     76e:	b6 01       	movw	r22, r12
     770:	98 d4       	rcall	.+2352   	; 0x10a2 <__mulsf3>
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	56 e3       	ldi	r21, 0x36	; 54
     77a:	93 d4       	rcall	.+2342   	; 0x10a2 <__mulsf3>
     77c:	4b 01       	movw	r8, r22
     77e:	5c 01       	movw	r10, r24
     780:	60 91 91 02 	lds	r22, 0x0291	; 0x800291 <dig_P2>
     784:	70 91 92 02 	lds	r23, 0x0292	; 0x800292 <dig_P2+0x1>
     788:	07 2e       	mov	r0, r23
     78a:	00 0c       	add	r0, r0
     78c:	88 0b       	sbc	r24, r24
     78e:	99 0b       	sbc	r25, r25
     790:	d8 d3       	rcall	.+1968   	; 0xf42 <__floatsisf>
     792:	9b 01       	movw	r18, r22
     794:	ac 01       	movw	r20, r24
     796:	c7 01       	movw	r24, r14
     798:	b6 01       	movw	r22, r12
     79a:	83 d4       	rcall	.+2310   	; 0x10a2 <__mulsf3>
     79c:	9b 01       	movw	r18, r22
     79e:	ac 01       	movw	r20, r24
     7a0:	c5 01       	movw	r24, r10
     7a2:	b4 01       	movw	r22, r8
     7a4:	fc d2       	rcall	.+1528   	; 0xd9e <__addsf3>
     7a6:	20 e0       	ldi	r18, 0x00	; 0
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	40 e0       	ldi	r20, 0x00	; 0
     7ac:	56 e3       	ldi	r21, 0x36	; 54
     7ae:	79 d4       	rcall	.+2290   	; 0x10a2 <__mulsf3>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
    var1 = (1.0 + var1 / 32768.0)*((float)dig_P1);
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	58 e3       	ldi	r21, 0x38	; 56
     7b8:	74 d4       	rcall	.+2280   	; 0x10a2 <__mulsf3>
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e8       	ldi	r20, 0x80	; 128
     7c0:	5f e3       	ldi	r21, 0x3F	; 63
     7c2:	ed d2       	rcall	.+1498   	; 0xd9e <__addsf3>
     7c4:	6b 01       	movw	r12, r22
     7c6:	7c 01       	movw	r14, r24
     7c8:	60 91 98 02 	lds	r22, 0x0298	; 0x800298 <dig_P1>
     7cc:	70 91 99 02 	lds	r23, 0x0299	; 0x800299 <dig_P1+0x1>
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	b4 d3       	rcall	.+1896   	; 0xf3e <__floatunsisf>
     7d6:	9b 01       	movw	r18, r22
     7d8:	ac 01       	movw	r20, r24
     7da:	c7 01       	movw	r24, r14
     7dc:	b6 01       	movw	r22, r12
     7de:	61 d4       	rcall	.+2242   	; 0x10a2 <__mulsf3>
     7e0:	6b 01       	movw	r12, r22
     7e2:	7c 01       	movw	r14, r24
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	30 e0       	ldi	r19, 0x00	; 0
    if (var1 == 0.0)
     7e8:	a9 01       	movw	r20, r18
     7ea:	3d d3       	rcall	.+1658   	; 0xe66 <__cmpsf2>
     7ec:	81 11       	cpse	r24, r1
     7ee:	07 c0       	rjmp	.+14     	; 0x7fe <BMP280_readPressure_float+0x1c8>
     7f0:	ed 81       	ldd	r30, Y+5	; 0x05
     7f2:	fe 81       	ldd	r31, Y+6	; 0x06
     7f4:	10 82       	st	Z, r1
    {    
        *pressure = 0;
     7f6:	11 82       	std	Z+1, r1	; 0x01
     7f8:	12 82       	std	Z+2, r1	; 0x02
     7fa:	13 82       	std	Z+3, r1	; 0x03
     7fc:	82 c0       	rjmp	.+260    	; 0x902 <BMP280_readPressure_float+0x2cc>
     7fe:	c3 01       	movw	r24, r6
        return; // avoid exception caused by division by zero
     800:	b2 01       	movw	r22, r4
    }
    *pressure = 1048576.0-(float)adc_P;
     802:	9f d3       	rcall	.+1854   	; 0xf42 <__floatsisf>
     804:	9b 01       	movw	r18, r22
     806:	ac 01       	movw	r20, r24
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	80 e8       	ldi	r24, 0x80	; 128
     80e:	99 e4       	ldi	r25, 0x49	; 73
     810:	c5 d2       	rcall	.+1418   	; 0xd9c <__subsf3>
     812:	4b 01       	movw	r8, r22
     814:	5c 01       	movw	r10, r24
     816:	ed 81       	ldd	r30, Y+5	; 0x05
     818:	fe 81       	ldd	r31, Y+6	; 0x06
     81a:	60 83       	st	Z, r22
     81c:	71 83       	std	Z+1, r23	; 0x01
     81e:	82 83       	std	Z+2, r24	; 0x02
     820:	93 83       	std	Z+3, r25	; 0x03
     822:	20 e0       	ldi	r18, 0x00	; 0
    *pressure = (*pressure-(var2 / 4096.0)) * 6250.0 / var1;
     824:	30 e0       	ldi	r19, 0x00	; 0
     826:	40 e8       	ldi	r20, 0x80	; 128
     828:	59 e3       	ldi	r21, 0x39	; 57
     82a:	69 81       	ldd	r22, Y+1	; 0x01
     82c:	7a 81       	ldd	r23, Y+2	; 0x02
     82e:	8b 81       	ldd	r24, Y+3	; 0x03
     830:	9c 81       	ldd	r25, Y+4	; 0x04
     832:	37 d4       	rcall	.+2158   	; 0x10a2 <__mulsf3>
     834:	9b 01       	movw	r18, r22
     836:	ac 01       	movw	r20, r24
     838:	c5 01       	movw	r24, r10
     83a:	b4 01       	movw	r22, r8
     83c:	af d2       	rcall	.+1374   	; 0xd9c <__subsf3>
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e5       	ldi	r19, 0x50	; 80
     842:	43 ec       	ldi	r20, 0xC3	; 195
     844:	55 e4       	ldi	r21, 0x45	; 69
     846:	2d d4       	rcall	.+2138   	; 0x10a2 <__mulsf3>
     848:	a7 01       	movw	r20, r14
     84a:	96 01       	movw	r18, r12
     84c:	10 d3       	rcall	.+1568   	; 0xe6e <__divsf3>
     84e:	6b 01       	movw	r12, r22
     850:	7c 01       	movw	r14, r24
     852:	ed 81       	ldd	r30, Y+5	; 0x05
     854:	fe 81       	ldd	r31, Y+6	; 0x06
     856:	60 83       	st	Z, r22
     858:	71 83       	std	Z+1, r23	; 0x01
     85a:	82 83       	std	Z+2, r24	; 0x02
     85c:	93 83       	std	Z+3, r25	; 0x03
     85e:	60 91 9e 02 	lds	r22, 0x029E	; 0x80029e <dig_P9>
    var1 = ((float)dig_P9) * (*pressure) * (*pressure) / 2147483648.0;
     862:	70 91 9f 02 	lds	r23, 0x029F	; 0x80029f <dig_P9+0x1>
     866:	07 2e       	mov	r0, r23
     868:	00 0c       	add	r0, r0
     86a:	88 0b       	sbc	r24, r24
     86c:	99 0b       	sbc	r25, r25
     86e:	69 d3       	rcall	.+1746   	; 0xf42 <__floatsisf>
     870:	9b 01       	movw	r18, r22
     872:	ac 01       	movw	r20, r24
     874:	c7 01       	movw	r24, r14
     876:	b6 01       	movw	r22, r12
     878:	14 d4       	rcall	.+2088   	; 0x10a2 <__mulsf3>
     87a:	9b 01       	movw	r18, r22
     87c:	ac 01       	movw	r20, r24
     87e:	c7 01       	movw	r24, r14
     880:	b6 01       	movw	r22, r12
     882:	0f d4       	rcall	.+2078   	; 0x10a2 <__mulsf3>
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	40 e0       	ldi	r20, 0x00	; 0
     88a:	50 e3       	ldi	r21, 0x30	; 48
     88c:	0a d4       	rcall	.+2068   	; 0x10a2 <__mulsf3>
     88e:	4b 01       	movw	r8, r22
     890:	5c 01       	movw	r10, r24
     892:	60 91 9c 02 	lds	r22, 0x029C	; 0x80029c <dig_P8>
    var2 = *pressure * ((float)dig_P8) / 32768.0;
     896:	70 91 9d 02 	lds	r23, 0x029D	; 0x80029d <dig_P8+0x1>
     89a:	07 2e       	mov	r0, r23
     89c:	00 0c       	add	r0, r0
     89e:	88 0b       	sbc	r24, r24
     8a0:	99 0b       	sbc	r25, r25
     8a2:	4f d3       	rcall	.+1694   	; 0xf42 <__floatsisf>
     8a4:	9b 01       	movw	r18, r22
     8a6:	ac 01       	movw	r20, r24
     8a8:	c7 01       	movw	r24, r14
     8aa:	b6 01       	movw	r22, r12
     8ac:	fa d3       	rcall	.+2036   	; 0x10a2 <__mulsf3>
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	40 e0       	ldi	r20, 0x00	; 0
     8b4:	58 e3       	ldi	r21, 0x38	; 56
     8b6:	f5 d3       	rcall	.+2026   	; 0x10a2 <__mulsf3>
     8b8:	9b 01       	movw	r18, r22
     8ba:	ac 01       	movw	r20, r24
     8bc:	c5 01       	movw	r24, r10
     8be:	b4 01       	movw	r22, r8
    *pressure = *pressure + (var1 + var2 + ((float)dig_P7)) / 16.0;
     8c0:	6e d2       	rcall	.+1244   	; 0xd9e <__addsf3>
     8c2:	4b 01       	movw	r8, r22
     8c4:	5c 01       	movw	r10, r24
     8c6:	60 91 8b 02 	lds	r22, 0x028B	; 0x80028b <dig_P7>
     8ca:	70 91 8c 02 	lds	r23, 0x028C	; 0x80028c <dig_P7+0x1>
     8ce:	07 2e       	mov	r0, r23
     8d0:	00 0c       	add	r0, r0
     8d2:	88 0b       	sbc	r24, r24
     8d4:	99 0b       	sbc	r25, r25
     8d6:	35 d3       	rcall	.+1642   	; 0xf42 <__floatsisf>
     8d8:	9b 01       	movw	r18, r22
     8da:	ac 01       	movw	r20, r24
     8dc:	c5 01       	movw	r24, r10
     8de:	b4 01       	movw	r22, r8
     8e0:	5e d2       	rcall	.+1212   	; 0xd9e <__addsf3>
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e8       	ldi	r20, 0x80	; 128
     8e8:	5d e3       	ldi	r21, 0x3D	; 61
     8ea:	db d3       	rcall	.+1974   	; 0x10a2 <__mulsf3>
     8ec:	9b 01       	movw	r18, r22
     8ee:	ac 01       	movw	r20, r24
     8f0:	c7 01       	movw	r24, r14
     8f2:	b6 01       	movw	r22, r12
     8f4:	54 d2       	rcall	.+1192   	; 0xd9e <__addsf3>
     8f6:	ed 81       	ldd	r30, Y+5	; 0x05
     8f8:	fe 81       	ldd	r31, Y+6	; 0x06
     8fa:	60 83       	st	Z, r22
     8fc:	71 83       	std	Z+1, r23	; 0x01
     8fe:	82 83       	std	Z+2, r24	; 0x02
     900:	93 83       	std	Z+3, r25	; 0x03
     902:	26 96       	adiw	r28, 0x06	; 6
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	de bf       	out	0x3e, r29	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	df 91       	pop	r29
    return;
}
     910:	cf 91       	pop	r28
     912:	ff 90       	pop	r15
     914:	ef 90       	pop	r14
     916:	df 90       	pop	r13
     918:	cf 90       	pop	r12
     91a:	bf 90       	pop	r11
     91c:	af 90       	pop	r10
     91e:	9f 90       	pop	r9
     920:	8f 90       	pop	r8
     922:	7f 90       	pop	r7
     924:	6f 90       	pop	r6
     926:	5f 90       	pop	r5
     928:	4f 90       	pop	r4
     92a:	08 95       	ret

0000092c <BMP280_altitude>:
     92c:	fc 01       	movw	r30, r24
     92e:	60 81       	ld	r22, Z
     930:	71 81       	ldd	r23, Z+1	; 0x01
     932:	82 81       	ldd	r24, Z+2	; 0x02
     934:	93 81       	ldd	r25, Z+3	; 0x03
     936:	20 e8       	ldi	r18, 0x80	; 128
     938:	36 ee       	ldi	r19, 0xE6	; 230

float BMP280_altitude(float *pressure)
{
    float temp;
    float  altitude;
    temp = (float) *pressure/101325;
     93a:	45 ec       	ldi	r20, 0xC5	; 197
     93c:	57 e4       	ldi	r21, 0x47	; 71
     93e:	97 d2       	rcall	.+1326   	; 0xe6e <__divsf3>
    temp = 1-pow(temp, 0.19029);
     940:	22 e6       	ldi	r18, 0x62	; 98
     942:	3b ed       	ldi	r19, 0xDB	; 219
     944:	42 e4       	ldi	r20, 0x42	; 66
     946:	5e e3       	ldi	r21, 0x3E	; 62
     948:	0f d4       	rcall	.+2078   	; 0x1168 <pow>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	80 e8       	ldi	r24, 0x80	; 128
     954:	9f e3       	ldi	r25, 0x3F	; 63
     956:	22 d2       	rcall	.+1092   	; 0xd9c <__subsf3>
    //altitude = round(44330*temp*10);
    altitude = 44330*temp;
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	3a e2       	ldi	r19, 0x2A	; 42
     95c:	4d e2       	ldi	r20, 0x2D	; 45
     95e:	57 e4       	ldi	r21, 0x47	; 71
    return altitude;
}
     960:	a0 c3       	rjmp	.+1856   	; 0x10a2 <__mulsf3>

00000962 <BMP280_receiveData>:

uint8_t BMP280_receiveData(int32_t *temperature,float *pressure,float *alt)
{   
     962:	ef 92       	push	r14
     964:	ff 92       	push	r15
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	7c 01       	movw	r14, r24
     970:	eb 01       	movw	r28, r22
     972:	8a 01       	movw	r16, r20
    BMP280_write8(BMP280_REGISTER_CONTROL, BMP280_MEAS); 
     974:	65 e5       	ldi	r22, 0x55	; 85
     976:	84 ef       	ldi	r24, 0xF4	; 244
     978:	5d dc       	rcall	.-1862   	; 0x234 <BMP280_write8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     97a:	2f ef       	ldi	r18, 0xFF	; 255
     97c:	82 e1       	ldi	r24, 0x12	; 18
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	21 50       	subi	r18, 0x01	; 1
     982:	80 40       	sbci	r24, 0x00	; 0
     984:	90 40       	sbci	r25, 0x00	; 0
     986:	e1 f7       	brne	.-8      	; 0x980 <BMP280_receiveData+0x1e>
     988:	00 c0       	rjmp	.+0      	; 0x98a <BMP280_receiveData+0x28>
     98a:	00 00       	nop
    _delay_ms(44);
    BMP280_readPressure_float(temperature,pressure);
     98c:	be 01       	movw	r22, r28
     98e:	c7 01       	movw	r24, r14
     990:	52 de       	rcall	.-860    	; 0x636 <BMP280_readPressure_float>
    *alt = BMP280_altitude(pressure);
     992:	ce 01       	movw	r24, r28
     994:	cb df       	rcall	.-106    	; 0x92c <BMP280_altitude>
     996:	f8 01       	movw	r30, r16
     998:	60 83       	st	Z, r22
     99a:	71 83       	std	Z+1, r23	; 0x01
     99c:	82 83       	std	Z+2, r24	; 0x02
     99e:	93 83       	std	Z+3, r25	; 0x03
     9a0:	81 e0       	ldi	r24, 0x01	; 1
    return 1;
}
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	08 95       	ret

000009b0 <I2CInit>:
     9b0:	9c 01       	movw	r18, r24
	//Enable the TWI Module
	TWCR|=(1<<TWEN);
}
void I2CClose()
{
	TWCR&=(~(1<<TWEN));
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	72 e1       	ldi	r23, 0x12	; 18
     9ba:	8a e7       	ldi	r24, 0x7A	; 122
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	6a d5       	rcall	.+2772   	; 0x1494 <__divmodsi4>
     9c0:	ba 01       	movw	r22, r20
     9c2:	a9 01       	movw	r20, r18
     9c4:	40 51       	subi	r20, 0x10	; 16
     9c6:	51 09       	sbc	r21, r1
     9c8:	61 09       	sbc	r22, r1
     9ca:	71 09       	sbc	r23, r1
     9cc:	db 01       	movw	r26, r22
     9ce:	ca 01       	movw	r24, r20
     9d0:	1a f4       	brpl	.+6      	; 0x9d8 <I2CInit+0x28>
     9d2:	01 96       	adiw	r24, 0x01	; 1
     9d4:	a1 1d       	adc	r26, r1
     9d6:	b1 1d       	adc	r27, r1
     9d8:	b5 95       	asr	r27
     9da:	a7 95       	ror	r26
     9dc:	97 95       	ror	r25
     9de:	87 95       	ror	r24
     9e0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     9e4:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     9e8:	e4 e7       	ldi	r30, 0x74	; 116
     9ea:	f0 e0       	ldi	r31, 0x00	; 0
     9ec:	80 81       	ld	r24, Z
     9ee:	84 60       	ori	r24, 0x04	; 4
     9f0:	80 83       	st	Z, r24
     9f2:	08 95       	ret

000009f4 <I2CStart>:


void I2CStart()
{
	//Put Start Condition on Bus
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTA);
     9f4:	84 ea       	ldi	r24, 0xA4	; 164
     9f6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     9fa:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     9fe:	88 23       	and	r24, r24
     a00:	e4 f7       	brge	.-8      	; 0x9fa <I2CStart+0x6>

}
     a02:	08 95       	ret

00000a04 <I2CStop>:

void I2CStop()
{
	//Put Stop Condition on bus
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     a04:	84 e9       	ldi	r24, 0x94	; 148
     a06:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	
	//Wait for STOP to finish
	while(TWCR & (1<<TWSTO));
     a0a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     a0e:	84 fd       	sbrc	r24, 4
     a10:	fc cf       	rjmp	.-8      	; 0xa0a <I2CStop+0x6>
	//_delay_loop_2(250);
}
     a12:	08 95       	ret

00000a14 <I2CWriteByte>:

uint8_t I2CWriteByte(uint8_t data)
{
	
	TWDR=data;	
     a14:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>

	//Initiate Transfer
	TWCR=(1<<TWEN)|(1<<TWINT);
     a18:	84 e8       	ldi	r24, 0x84	; 132
     a1a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     a1e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     a22:	88 23       	and	r24, r24
     a24:	e4 f7       	brge	.-8      	; 0xa1e <I2CWriteByte+0xa>

	//Check Status
	if((TWSR & 0xF8) == 0x18 || (TWSR & 0xF8) == 0x28 || (TWSR & 0xF8) == 0x40)
     a26:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     a2a:	88 7f       	andi	r24, 0xF8	; 248
     a2c:	88 31       	cpi	r24, 0x18	; 24
     a2e:	61 f0       	breq	.+24     	; 0xa48 <I2CWriteByte+0x34>
     a30:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     a34:	88 7f       	andi	r24, 0xF8	; 248
     a36:	88 32       	cpi	r24, 0x28	; 40
     a38:	49 f0       	breq	.+18     	; 0xa4c <I2CWriteByte+0x38>
     a3a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     a3e:	88 7f       	andi	r24, 0xF8	; 248
     a40:	80 34       	cpi	r24, 0x40	; 64
     a42:	31 f4       	brne	.+12     	; 0xa50 <I2CWriteByte+0x3c>
		//or
		//SLA+R Transmitted and ACK received
		//or
		//DATA Transmitted and ACK recived

		return TRUE;
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	08 95       	ret
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	08 95       	ret
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	08 95       	ret
	}
	else
		return FALSE;	//Error
     a50:	80 e0       	ldi	r24, 0x00	; 0
}
     a52:	08 95       	ret

00000a54 <I2CReadByte>:

uint8_t I2CReadByte(uint8_t *data,uint8_t ack)
{
     a54:	dc 01       	movw	r26, r24
	//Set up ACK
	if(ack)
     a56:	66 23       	and	r22, r22
     a58:	31 f0       	breq	.+12     	; 0xa66 <I2CReadByte+0x12>
	{
		//return ACK after reception
		TWCR|=(1<<TWEA);
     a5a:	e4 e7       	ldi	r30, 0x74	; 116
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	90 81       	ld	r25, Z
     a60:	90 64       	ori	r25, 0x40	; 64
     a62:	90 83       	st	Z, r25
     a64:	05 c0       	rjmp	.+10     	; 0xa70 <I2CReadByte+0x1c>
	else
	{
		//return NACK after reception
		//Signals slave to stop giving more data
		//usually used for last byte read.
		TWCR&=(~(1<<TWEA));
     a66:	e4 e7       	ldi	r30, 0x74	; 116
     a68:	f0 e0       	ldi	r31, 0x00	; 0
     a6a:	90 81       	ld	r25, Z
     a6c:	9f 7b       	andi	r25, 0xBF	; 191
     a6e:	90 83       	st	Z, r25
	}

	//Now enable Reception of data by clearing TWINT
	TWCR|=(1<<TWINT);
     a70:	e4 e7       	ldi	r30, 0x74	; 116
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	90 81       	ld	r25, Z
     a76:	90 68       	ori	r25, 0x80	; 128
     a78:	90 83       	st	Z, r25

	//Wait till done
	while(!(TWCR & (1<<TWINT)));
     a7a:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     a7e:	99 23       	and	r25, r25
     a80:	e4 f7       	brge	.-8      	; 0xa7a <I2CReadByte+0x26>

	//Check status
	if((TWSR & 0xF8) == 0x58 || (TWSR & 0xF8) == 0x50)
     a82:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     a86:	98 7f       	andi	r25, 0xF8	; 248
     a88:	98 35       	cpi	r25, 0x58	; 88
     a8a:	29 f0       	breq	.+10     	; 0xa96 <I2CReadByte+0x42>
     a8c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     a90:	98 7f       	andi	r25, 0xF8	; 248
     a92:	90 35       	cpi	r25, 0x50	; 80
     a94:	29 f4       	brne	.+10     	; 0xaa0 <I2CReadByte+0x4c>
		//	or
		//Data received and NACK returned

		//Read the data

		*data=TWDR;
     a96:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
     a9a:	8c 93       	st	X, r24
		return TRUE;
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	08 95       	ret
	}
	else
		return FALSE;	//Error
     aa0:	80 e0       	ldi	r24, 0x00	; 0
	
}
     aa2:	08 95       	ret

00000aa4 <I2CWriteRegister>:

void I2CWriteRegister(uint8_t addr, uint8_t reg, uint8_t value)

{
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	18 2f       	mov	r17, r24
     aac:	d6 2f       	mov	r29, r22
     aae:	c4 2f       	mov	r28, r20
   I2CStart();
     ab0:	a1 df       	rcall	.-190    	; 0x9f4 <I2CStart>
   I2CWriteByte((addr<<1));
     ab2:	81 2f       	mov	r24, r17
     ab4:	88 0f       	add	r24, r24
     ab6:	ae df       	rcall	.-164    	; 0xa14 <I2CWriteByte>
   I2CWriteByte(reg);
     ab8:	8d 2f       	mov	r24, r29
     aba:	ac df       	rcall	.-168    	; 0xa14 <I2CWriteByte>
   I2CWriteByte(value);
     abc:	8c 2f       	mov	r24, r28
     abe:	aa df       	rcall	.-172    	; 0xa14 <I2CWriteByte>
     ac0:	8f e1       	ldi	r24, 0x1F	; 31
     ac2:	9e e4       	ldi	r25, 0x4E	; 78
     ac4:	01 97       	sbiw	r24, 0x01	; 1
     ac6:	f1 f7       	brne	.-4      	; 0xac4 <I2CWriteRegister+0x20>
     ac8:	00 c0       	rjmp	.+0      	; 0xaca <I2CWriteRegister+0x26>
     aca:	00 00       	nop
   _delay_ms(10);
   I2CStop();
     acc:	9b df       	rcall	.-202    	; 0xa04 <I2CStop>
     ace:	8f ed       	ldi	r24, 0xDF	; 223
     ad0:	9e e2       	ldi	r25, 0x2E	; 46
     ad2:	01 97       	sbiw	r24, 0x01	; 1
     ad4:	f1 f7       	brne	.-4      	; 0xad2 <I2CWriteRegister+0x2e>
     ad6:	00 c0       	rjmp	.+0      	; 0xad8 <I2CWriteRegister+0x34>
     ad8:	00 00       	nop
     ada:	df 91       	pop	r29
   _delay_ms(6);
}
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	08 95       	ret

00000ae2 <I2CReadBytes>:
     ae2:	ff 92       	push	r15

void I2CReadBytes(uint8_t dev_addr, uint8_t register_addr, uint8_t num, uint8_t *buffer)
{
     ae4:	0f 93       	push	r16
     ae6:	1f 93       	push	r17
     ae8:	cf 93       	push	r28
     aea:	df 93       	push	r29
     aec:	c8 2f       	mov	r28, r24
     aee:	f6 2e       	mov	r15, r22
     af0:	d4 2f       	mov	r29, r20
     af2:	89 01       	movw	r16, r18
	I2CStart();
     af4:	7f df       	rcall	.-258    	; 0x9f4 <I2CStart>
	I2CWriteByte(dev_addr<<1);
     af6:	cc 0f       	add	r28, r28
     af8:	8c 2f       	mov	r24, r28
     afa:	8c df       	rcall	.-232    	; 0xa14 <I2CWriteByte>
	I2CWriteByte(register_addr);  //Accelerometer Measurements
     afc:	8f 2d       	mov	r24, r15
     afe:	8a df       	rcall	.-236    	; 0xa14 <I2CWriteByte>

	I2CStart();
     b00:	79 df       	rcall	.-270    	; 0x9f4 <I2CStart>
	I2CWriteByte((dev_addr<<1)+1);
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	8c 0f       	add	r24, r28
     b06:	86 df       	rcall	.-244    	; 0xa14 <I2CWriteByte>

	for (uint8_t i = 0; i < num; i++) {
     b08:	c0 e0       	ldi	r28, 0x00	; 0
     b0a:	06 c0       	rjmp	.+12     	; 0xb18 <I2CReadBytes+0x36>
		I2CReadByte(buffer,1);
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	c8 01       	movw	r24, r16
     b10:	a1 df       	rcall	.-190    	; 0xa54 <I2CReadByte>
     b12:	0f 5f       	subi	r16, 0xFF	; 255
	    buffer++;
     b14:	1f 4f       	sbci	r17, 0xFF	; 255
     b16:	cf 5f       	subi	r28, 0xFF	; 255
	I2CWriteByte(register_addr);  //Accelerometer Measurements

	I2CStart();
	I2CWriteByte((dev_addr<<1)+1);

	for (uint8_t i = 0; i < num; i++) {
     b18:	cd 17       	cp	r28, r29
     b1a:	c0 f3       	brcs	.-16     	; 0xb0c <I2CReadBytes+0x2a>
     b1c:	df 91       	pop	r29
		I2CReadByte(buffer,1);
	    buffer++;
	}
}
     b1e:	cf 91       	pop	r28
     b20:	1f 91       	pop	r17
     b22:	0f 91       	pop	r16
     b24:	ff 90       	pop	r15
     b26:	08 95       	ret

00000b28 <USART_PutChar>:
#include "bmp280_i2c.h"
#include "i2c_avr.h"
#include "adxl345_i2c.h"

static int USART_PutChar(char c, FILE *stream)
{
     b28:	cf 93       	push	r28
     b2a:	c8 2f       	mov	r28, r24
	if (c == '\n')
     b2c:	8a 30       	cpi	r24, 0x0A	; 10
     b2e:	11 f4       	brne	.+4      	; 0xb34 <USART_PutChar+0xc>
	USART_PutChar('\r', stream);
     b30:	8d e0       	ldi	r24, 0x0D	; 13
     b32:	fa df       	rcall	.-12     	; 0xb28 <USART_PutChar>
	USART_SendByte(c);
     b34:	8c 2f       	mov	r24, r28
     b36:	2e d1       	rcall	.+604    	; 0xd94 <USART_SendByte>
	return 0;
}
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	cf 91       	pop	r28
     b3e:	08 95       	ret

00000b40 <Sensors_Init>:
static FILE mystdout = FDEV_SETUP_STREAM(USART_PutChar, NULL, _FDEV_SETUP_WRITE);

void Sensors_Init()
{
	I2CInit(100000);
     b40:	80 ea       	ldi	r24, 0xA0	; 160
     b42:	96 e8       	ldi	r25, 0x86	; 134
     b44:	35 df       	rcall	.-406    	; 0x9b0 <I2CInit>
	int i = ADXL345_begin(ADXL345_ALTERNATIVE_ADDRESS);
     b46:	83 e5       	ldi	r24, 0x53	; 83
     b48:	25 db       	rcall	.-2486   	; 0x194 <ADXL345_begin>
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	39 e6       	ldi	r19, 0x69	; 105
     b4e:	98 e1       	ldi	r25, 0x18	; 24
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	30 40       	sbci	r19, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	e1 f7       	brne	.-8      	; 0xb50 <Sensors_Init+0x10>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <Sensors_Init+0x1a>
     b5a:	00 00       	nop
	_delay_ms(1000);
	if (i==1){
     b5c:	81 30       	cpi	r24, 0x01	; 1
     b5e:	41 f4       	brne	.+16     	; 0xb70 <Sensors_Init+0x30>
		printf ("ADXL INIT OK");
     b60:	8d ef       	ldi	r24, 0xFD	; 253
     b62:	91 e0       	ldi	r25, 0x01	; 1
     b64:	9f 93       	push	r25
     b66:	8f 93       	push	r24
     b68:	d0 d4       	rcall	.+2464   	; 0x150a <printf>
     b6a:	0f 90       	pop	r0
     b6c:	0f 90       	pop	r0
     b6e:	08 95       	ret
		} else {
		printf ("ADXL INIT NOT OK");
     b70:	8a e0       	ldi	r24, 0x0A	; 10
     b72:	92 e0       	ldi	r25, 0x02	; 2
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	c8 d4       	rcall	.+2448   	; 0x150a <printf>
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	08 95       	ret

00000b80 <USART_INIT>:
	}
}

void USART_INIT()
{
	DDRD = 0b10000000;
     b80:	80 e8       	ldi	r24, 0x80	; 128
     b82:	81 bb       	out	0x11, r24	; 17
	UBRR0H = 0;
     b84:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 51;
     b88:	93 e3       	ldi	r25, 0x33	; 51
     b8a:	99 b9       	out	0x09, r25	; 9
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     b8c:	98 e1       	ldi	r25, 0x18	; 24
     b8e:	9a b9       	out	0x0a, r25	; 10
	UCSR0C = (3<<UCSZ00);
     b90:	96 e0       	ldi	r25, 0x06	; 6
     b92:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	PORTD = (1<<PD7);
     b96:	82 bb       	out	0x12, r24	; 18
     b98:	2f ef       	ldi	r18, 0xFF	; 255
     b9a:	89 e6       	ldi	r24, 0x69	; 105
     b9c:	98 e1       	ldi	r25, 0x18	; 24
     b9e:	21 50       	subi	r18, 0x01	; 1
     ba0:	80 40       	sbci	r24, 0x00	; 0
     ba2:	90 40       	sbci	r25, 0x00	; 0
     ba4:	e1 f7       	brne	.-8      	; 0xb9e <USART_INIT+0x1e>
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <USART_INIT+0x28>
     ba8:	00 00       	nop
     baa:	08 95       	ret

00000bac <USART_RECIVE>:
	_delay_ms(1000);
}
int USART_RECIVE()
{
	while(!(UCSR0A & (1<<RXC0)));
     bac:	5f 9b       	sbis	0x0b, 7	; 11
     bae:	fe cf       	rjmp	.-4      	; 0xbac <USART_RECIVE>
	return UDR0;
     bb0:	8c b1       	in	r24, 0x0c	; 12
}
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	08 95       	ret

00000bb6 <USART_TRANSMITT>:
void USART_TRANSMITT(uint8_t data)
{
	while(!(UCSR0A & (1<<UDRE0)));
     bb6:	5d 9b       	sbis	0x0b, 5	; 11
     bb8:	fe cf       	rjmp	.-4      	; 0xbb6 <USART_TRANSMITT>
	UDR0 = data;
     bba:	8c b9       	out	0x0c, r24	; 12
     bbc:	08 95       	ret

00000bbe <STRING_TRANSMITT>:
}
void STRING_TRANSMITT(char string[])
{
     bbe:	0f 93       	push	r16
     bc0:	1f 93       	push	r17
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	8c 01       	movw	r16, r24
	for(int i = 0;string[i] != 0;i++)
     bc8:	c0 e0       	ldi	r28, 0x00	; 0
     bca:	d0 e0       	ldi	r29, 0x00	; 0
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <STRING_TRANSMITT+0x14>
	{
		USART_TRANSMITT((uint8_t)string[i]);
     bce:	f3 df       	rcall	.-26     	; 0xbb6 <USART_TRANSMITT>
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}
void STRING_TRANSMITT(char string[])
{
	for(int i = 0;string[i] != 0;i++)
     bd0:	21 96       	adiw	r28, 0x01	; 1
     bd2:	f8 01       	movw	r30, r16
     bd4:	ec 0f       	add	r30, r28
     bd6:	fd 1f       	adc	r31, r29
     bd8:	80 81       	ld	r24, Z
     bda:	81 11       	cpse	r24, r1
     bdc:	f8 cf       	rjmp	.-16     	; 0xbce <STRING_TRANSMITT+0x10>
	{
		USART_TRANSMITT((uint8_t)string[i]);
	}
}
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	1f 91       	pop	r17
     be4:	0f 91       	pop	r16
     be6:	08 95       	ret

00000be8 <main>:
int main()
{
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	cd b7       	in	r28, 0x3d	; 61
     bee:	de b7       	in	r29, 0x3e	; 62
     bf0:	6b 97       	sbiw	r28, 0x1b	; 27
     bf2:	0f b6       	in	r0, 0x3f	; 63
     bf4:	f8 94       	cli
     bf6:	de bf       	out	0x3e, r29	; 62
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	cd bf       	out	0x3d, r28	; 61
	uint8_t bmp280_connection, bmp280_data_received=0, chid;
	int32_t temperature;
	float pressure, alt;
	int x = 0, y = 0, z = 0;
     bfc:	1e 86       	std	Y+14, r1	; 0x0e
     bfe:	1d 86       	std	Y+13, r1	; 0x0d
     c00:	18 8a       	std	Y+16, r1	; 0x10
     c02:	1f 86       	std	Y+15, r1	; 0x0f
     c04:	1a 8a       	std	Y+18, r1	; 0x12
     c06:	19 8a       	std	Y+17, r1	; 0x11
	
	
	I2CInit(100000);
     c08:	80 ea       	ldi	r24, 0xA0	; 160
     c0a:	96 e8       	ldi	r25, 0x86	; 134
     c0c:	d1 de       	rcall	.-606    	; 0x9b0 <I2CInit>
	Sensors_Init();
     c0e:	98 df       	rcall	.-208    	; 0xb40 <Sensors_Init>
     c10:	80 e8       	ldi	r24, 0x80	; 128
	USART_INIT(9600);
     c12:	95 e2       	ldi	r25, 0x25	; 37
     c14:	b5 df       	rcall	.-150    	; 0xb80 <USART_INIT>
	bmp280_connection = BMP280_begin(0x76);
     c16:	86 e7       	ldi	r24, 0x76	; 118
     c18:	54 dc       	rcall	.-1880   	; 0x4c2 <BMP280_begin>
     c1a:	12 ba       	out	0x12, r1	; 18
	PORTD = (0<<PD7);
     c1c:	89 e0       	ldi	r24, 0x09	; 9
	char str[] = "Output: ";
     c1e:	e0 e8       	ldi	r30, 0x80	; 128
     c20:	f2 e0       	ldi	r31, 0x02	; 2
     c22:	de 01       	movw	r26, r28
     c24:	53 96       	adiw	r26, 0x13	; 19
     c26:	01 90       	ld	r0, Z+
     c28:	0d 92       	st	X+, r0
     c2a:	8a 95       	dec	r24
     c2c:	e1 f7       	brne	.-8      	; 0xc26 <main+0x3e>
     c2e:	80 e0       	ldi	r24, 0x00	; 0
	
	stdout = &mystdout;
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <__iob+0x3>
     c36:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <__iob+0x2>
     c3a:	8b e1       	ldi	r24, 0x1B	; 27
	printf("111/n");
     c3c:	92 e0       	ldi	r25, 0x02	; 2
     c3e:	9f 93       	push	r25
     c40:	8f 93       	push	r24
     c42:	63 d4       	rcall	.+2246   	; 0x150a <printf>
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	ae 01       	movw	r20, r28
		
	}
	
	while(1)
	{
		ADXL345_readXYZ_raw(&x, &y, &z);
     c4a:	4f 5e       	subi	r20, 0xEF	; 239
     c4c:	5f 4f       	sbci	r21, 0xFF	; 255
     c4e:	be 01       	movw	r22, r28
     c50:	61 5f       	subi	r22, 0xF1	; 241
     c52:	7f 4f       	sbci	r23, 0xFF	; 255
     c54:	ce 01       	movw	r24, r28
     c56:	0d 96       	adiw	r24, 0x0d	; 13
     c58:	ab da       	rcall	.-2730   	; 0x1b0 <ADXL345_readXYZ_raw>
     c5a:	6d 85       	ldd	r22, Y+13	; 0x0d
		float x1 = x*0.041744;
     c5c:	7e 85       	ldd	r23, Y+14	; 0x0e
     c5e:	07 2e       	mov	r0, r23
     c60:	00 0c       	add	r0, r0
     c62:	88 0b       	sbc	r24, r24
     c64:	99 0b       	sbc	r25, r25
     c66:	6d d1       	rcall	.+730    	; 0xf42 <__floatsisf>
     c68:	22 ec       	ldi	r18, 0xC2	; 194
     c6a:	3b ef       	ldi	r19, 0xFB	; 251
     c6c:	4a e2       	ldi	r20, 0x2A	; 42
     c6e:	5d e3       	ldi	r21, 0x3D	; 61
     c70:	18 d2       	rcall	.+1072   	; 0x10a2 <__mulsf3>
     c72:	f6 2e       	mov	r15, r22
     c74:	e7 2e       	mov	r14, r23
     c76:	d8 2e       	mov	r13, r24
     c78:	c9 2e       	mov	r12, r25
     c7a:	6f 85       	ldd	r22, Y+15	; 0x0f
		float y1 = y*0.041744;
     c7c:	78 89       	ldd	r23, Y+16	; 0x10
     c7e:	07 2e       	mov	r0, r23
     c80:	00 0c       	add	r0, r0
     c82:	88 0b       	sbc	r24, r24
     c84:	99 0b       	sbc	r25, r25
     c86:	5d d1       	rcall	.+698    	; 0xf42 <__floatsisf>
     c88:	22 ec       	ldi	r18, 0xC2	; 194
     c8a:	3b ef       	ldi	r19, 0xFB	; 251
     c8c:	4a e2       	ldi	r20, 0x2A	; 42
     c8e:	5d e3       	ldi	r21, 0x3D	; 61
     c90:	08 d2       	rcall	.+1040   	; 0x10a2 <__mulsf3>
     c92:	b6 2e       	mov	r11, r22
     c94:	a7 2e       	mov	r10, r23
     c96:	98 2e       	mov	r9, r24
     c98:	89 2e       	mov	r8, r25
     c9a:	69 89       	ldd	r22, Y+17	; 0x11
		float z1 = z*0.041744;
     c9c:	7a 89       	ldd	r23, Y+18	; 0x12
     c9e:	07 2e       	mov	r0, r23
     ca0:	00 0c       	add	r0, r0
     ca2:	88 0b       	sbc	r24, r24
     ca4:	99 0b       	sbc	r25, r25
     ca6:	4d d1       	rcall	.+666    	; 0xf42 <__floatsisf>
     ca8:	22 ec       	ldi	r18, 0xC2	; 194
     caa:	3b ef       	ldi	r19, 0xFB	; 251
     cac:	4a e2       	ldi	r20, 0x2A	; 42
     cae:	5d e3       	ldi	r21, 0x3D	; 61
     cb0:	f8 d1       	rcall	.+1008   	; 0x10a2 <__mulsf3>
     cb2:	66 2e       	mov	r6, r22
     cb4:	57 2e       	mov	r5, r23
     cb6:	48 2e       	mov	r4, r24
     cb8:	39 2e       	mov	r3, r25
     cba:	ae 01       	movw	r20, r28
		bmp280_data_received = BMP280_receiveData(&temperature,&pressure,&alt);
     cbc:	47 5f       	subi	r20, 0xF7	; 247
     cbe:	5f 4f       	sbci	r21, 0xFF	; 255
     cc0:	be 01       	movw	r22, r28
     cc2:	6b 5f       	subi	r22, 0xFB	; 251
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	ce 01       	movw	r24, r28
     cc8:	01 96       	adiw	r24, 0x01	; 1
     cca:	4b de       	rcall	.-874    	; 0x962 <BMP280_receiveData>
     ccc:	78 2e       	mov	r7, r24
     cce:	6e df       	rcall	.-292    	; 0xbac <USART_RECIVE>
     cd0:	8c 01       	movw	r16, r24
		int data = USART_RECIVE();
     cd2:	c1 97       	sbiw	r24, 0x31	; 49
     cd4:	19 f4       	brne	.+6      	; 0xcdc <main+0xf4>
     cd6:	80 e8       	ldi	r24, 0x80	; 128
		
		if(data=='1')
     cd8:	82 bb       	out	0x12, r24	; 18
     cda:	01 c0       	rjmp	.+2      	; 0xcde <main+0xf6>
		{
			PORTD = (1<<PD7);
     cdc:	12 ba       	out	0x12, r1	; 18
     cde:	21 e0       	ldi	r18, 0x01	; 1
     ce0:	72 12       	cpse	r7, r18
		}
		else
		{
			PORTD = (0<<PD7);
     ce2:	1e c0       	rjmp	.+60     	; 0xd20 <main+0x138>
		}
		
		if (bmp280_data_received ==1)
     ce4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ce6:	8f 93       	push	r24
     ce8:	8b 85       	ldd	r24, Y+11	; 0x0b
		{
			printf("temp = %d\n press = %f\n alt = %f\n",(int)temperature, pressure, alt);
     cea:	8f 93       	push	r24
     cec:	8a 85       	ldd	r24, Y+10	; 0x0a
     cee:	8f 93       	push	r24
     cf0:	89 85       	ldd	r24, Y+9	; 0x09
     cf2:	8f 93       	push	r24
     cf4:	88 85       	ldd	r24, Y+8	; 0x08
     cf6:	8f 93       	push	r24
     cf8:	8f 81       	ldd	r24, Y+7	; 0x07
     cfa:	8f 93       	push	r24
     cfc:	8e 81       	ldd	r24, Y+6	; 0x06
     cfe:	8f 93       	push	r24
     d00:	8d 81       	ldd	r24, Y+5	; 0x05
     d02:	8f 93       	push	r24
     d04:	8a 81       	ldd	r24, Y+2	; 0x02
     d06:	8f 93       	push	r24
     d08:	89 81       	ldd	r24, Y+1	; 0x01
     d0a:	8f 93       	push	r24
     d0c:	81 e2       	ldi	r24, 0x21	; 33
     d0e:	92 e0       	ldi	r25, 0x02	; 2
     d10:	9f 93       	push	r25
     d12:	8f 93       	push	r24
     d14:	fa d3       	rcall	.+2036   	; 0x150a <printf>
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	80 ed       	ldi	r24, 0xD0	; 208
     d22:	8e da       	rcall	.-2788   	; 0x240 <BMP280_read8>
		else
		{
			
		}
		
		chid = BMP280_read8(BMP280_REGISTER_CHIPID);
     d24:	78 2e       	mov	r7, r24
     d26:	3f 92       	push	r3
     d28:	4f 92       	push	r4
     d2a:	5f 92       	push	r5
		printf("x = %f y = %f z = %f/n", x1, y1, z1);
     d2c:	6f 92       	push	r6
     d2e:	8f 92       	push	r8
     d30:	9f 92       	push	r9
     d32:	af 92       	push	r10
     d34:	bf 92       	push	r11
     d36:	cf 92       	push	r12
     d38:	df 92       	push	r13
     d3a:	ef 92       	push	r14
     d3c:	ff 92       	push	r15
     d3e:	82 e4       	ldi	r24, 0x42	; 66
     d40:	92 e0       	ldi	r25, 0x02	; 2
     d42:	9f 93       	push	r25
     d44:	8f 93       	push	r24
     d46:	e1 d3       	rcall	.+1986   	; 0x150a <printf>
     d48:	1f 92       	push	r1
		printf("chid = %.2X\n", chid);
     d4a:	7f 92       	push	r7
     d4c:	89 e5       	ldi	r24, 0x59	; 89
     d4e:	92 e0       	ldi	r25, 0x02	; 2
     d50:	9f 93       	push	r25
     d52:	8f 93       	push	r24
		printf("temperature(ds18b20) = %d", data);
     d54:	da d3       	rcall	.+1972   	; 0x150a <printf>
     d56:	1f 93       	push	r17
     d58:	0f 93       	push	r16
     d5a:	86 e6       	ldi	r24, 0x66	; 102
     d5c:	92 e0       	ldi	r25, 0x02	; 2
     d5e:	9f 93       	push	r25
     d60:	8f 93       	push	r24
     d62:	d3 d3       	rcall	.+1958   	; 0x150a <printf>
		USART_TRANSMITT(0x0d);
     d64:	8d e0       	ldi	r24, 0x0D	; 13
     d66:	27 df       	rcall	.-434    	; 0xbb6 <USART_TRANSMITT>
     d68:	8a e0       	ldi	r24, 0x0A	; 10
		USART_TRANSMITT(0x0a);
     d6a:	25 df       	rcall	.-438    	; 0xbb6 <USART_TRANSMITT>
     d6c:	ce 01       	movw	r24, r28
     d6e:	43 96       	adiw	r24, 0x13	; 19
		STRING_TRANSMITT(str);
     d70:	26 df       	rcall	.-436    	; 0xbbe <STRING_TRANSMITT>
     d72:	80 2f       	mov	r24, r16
     d74:	20 df       	rcall	.-448    	; 0xbb6 <USART_TRANSMITT>
     d76:	9f ef       	ldi	r25, 0xFF	; 255
		USART_TRANSMITT(data);
     d78:	20 e7       	ldi	r18, 0x70	; 112
     d7a:	82 e0       	ldi	r24, 0x02	; 2
     d7c:	91 50       	subi	r25, 0x01	; 1
     d7e:	20 40       	sbci	r18, 0x00	; 0
     d80:	80 40       	sbci	r24, 0x00	; 0
     d82:	e1 f7       	brne	.-8      	; 0xd7c <main+0x194>
     d84:	00 c0       	rjmp	.+0      	; 0xd86 <main+0x19e>
     d86:	00 00       	nop
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	cd bf       	out	0x3d, r28	; 61
     d92:	5a cf       	rjmp	.-332    	; 0xc48 <main+0x60>

00000d94 <USART_SendByte>:
     d94:	5d 9b       	sbis	0x0b, 5	; 11
     d96:	fe cf       	rjmp	.-4      	; 0xd94 <USART_SendByte>
     d98:	8c b9       	out	0x0c, r24	; 12
     d9a:	08 95       	ret

00000d9c <__subsf3>:
     d9c:	50 58       	subi	r21, 0x80	; 128

00000d9e <__addsf3>:
     d9e:	bb 27       	eor	r27, r27
     da0:	aa 27       	eor	r26, r26
     da2:	0e d0       	rcall	.+28     	; 0xdc0 <__addsf3x>
     da4:	44 c1       	rjmp	.+648    	; 0x102e <__fp_round>
     da6:	35 d1       	rcall	.+618    	; 0x1012 <__fp_pscA>
     da8:	30 f0       	brcs	.+12     	; 0xdb6 <__addsf3+0x18>
     daa:	3a d1       	rcall	.+628    	; 0x1020 <__fp_pscB>
     dac:	20 f0       	brcs	.+8      	; 0xdb6 <__addsf3+0x18>
     dae:	31 f4       	brne	.+12     	; 0xdbc <__addsf3+0x1e>
     db0:	9f 3f       	cpi	r25, 0xFF	; 255
     db2:	11 f4       	brne	.+4      	; 0xdb8 <__addsf3+0x1a>
     db4:	1e f4       	brtc	.+6      	; 0xdbc <__addsf3+0x1e>
     db6:	2a c1       	rjmp	.+596    	; 0x100c <__fp_nan>
     db8:	0e f4       	brtc	.+2      	; 0xdbc <__addsf3+0x1e>
     dba:	e0 95       	com	r30
     dbc:	e7 fb       	bst	r30, 7
     dbe:	20 c1       	rjmp	.+576    	; 0x1000 <__fp_inf>

00000dc0 <__addsf3x>:
     dc0:	e9 2f       	mov	r30, r25
     dc2:	46 d1       	rcall	.+652    	; 0x1050 <__fp_split3>
     dc4:	80 f3       	brcs	.-32     	; 0xda6 <__addsf3+0x8>
     dc6:	ba 17       	cp	r27, r26
     dc8:	62 07       	cpc	r22, r18
     dca:	73 07       	cpc	r23, r19
     dcc:	84 07       	cpc	r24, r20
     dce:	95 07       	cpc	r25, r21
     dd0:	18 f0       	brcs	.+6      	; 0xdd8 <__addsf3x+0x18>
     dd2:	71 f4       	brne	.+28     	; 0xdf0 <__addsf3x+0x30>
     dd4:	9e f5       	brtc	.+102    	; 0xe3c <__addsf3x+0x7c>
     dd6:	5e c1       	rjmp	.+700    	; 0x1094 <__fp_zero>
     dd8:	0e f4       	brtc	.+2      	; 0xddc <__addsf3x+0x1c>
     dda:	e0 95       	com	r30
     ddc:	0b 2e       	mov	r0, r27
     dde:	ba 2f       	mov	r27, r26
     de0:	a0 2d       	mov	r26, r0
     de2:	0b 01       	movw	r0, r22
     de4:	b9 01       	movw	r22, r18
     de6:	90 01       	movw	r18, r0
     de8:	0c 01       	movw	r0, r24
     dea:	ca 01       	movw	r24, r20
     dec:	a0 01       	movw	r20, r0
     dee:	11 24       	eor	r1, r1
     df0:	ff 27       	eor	r31, r31
     df2:	59 1b       	sub	r21, r25
     df4:	99 f0       	breq	.+38     	; 0xe1c <__addsf3x+0x5c>
     df6:	59 3f       	cpi	r21, 0xF9	; 249
     df8:	50 f4       	brcc	.+20     	; 0xe0e <__addsf3x+0x4e>
     dfa:	50 3e       	cpi	r21, 0xE0	; 224
     dfc:	68 f1       	brcs	.+90     	; 0xe58 <__addsf3x+0x98>
     dfe:	1a 16       	cp	r1, r26
     e00:	f0 40       	sbci	r31, 0x00	; 0
     e02:	a2 2f       	mov	r26, r18
     e04:	23 2f       	mov	r18, r19
     e06:	34 2f       	mov	r19, r20
     e08:	44 27       	eor	r20, r20
     e0a:	58 5f       	subi	r21, 0xF8	; 248
     e0c:	f3 cf       	rjmp	.-26     	; 0xdf4 <__addsf3x+0x34>
     e0e:	46 95       	lsr	r20
     e10:	37 95       	ror	r19
     e12:	27 95       	ror	r18
     e14:	a7 95       	ror	r26
     e16:	f0 40       	sbci	r31, 0x00	; 0
     e18:	53 95       	inc	r21
     e1a:	c9 f7       	brne	.-14     	; 0xe0e <__addsf3x+0x4e>
     e1c:	7e f4       	brtc	.+30     	; 0xe3c <__addsf3x+0x7c>
     e1e:	1f 16       	cp	r1, r31
     e20:	ba 0b       	sbc	r27, r26
     e22:	62 0b       	sbc	r22, r18
     e24:	73 0b       	sbc	r23, r19
     e26:	84 0b       	sbc	r24, r20
     e28:	ba f0       	brmi	.+46     	; 0xe58 <__addsf3x+0x98>
     e2a:	91 50       	subi	r25, 0x01	; 1
     e2c:	a1 f0       	breq	.+40     	; 0xe56 <__addsf3x+0x96>
     e2e:	ff 0f       	add	r31, r31
     e30:	bb 1f       	adc	r27, r27
     e32:	66 1f       	adc	r22, r22
     e34:	77 1f       	adc	r23, r23
     e36:	88 1f       	adc	r24, r24
     e38:	c2 f7       	brpl	.-16     	; 0xe2a <__addsf3x+0x6a>
     e3a:	0e c0       	rjmp	.+28     	; 0xe58 <__addsf3x+0x98>
     e3c:	ba 0f       	add	r27, r26
     e3e:	62 1f       	adc	r22, r18
     e40:	73 1f       	adc	r23, r19
     e42:	84 1f       	adc	r24, r20
     e44:	48 f4       	brcc	.+18     	; 0xe58 <__addsf3x+0x98>
     e46:	87 95       	ror	r24
     e48:	77 95       	ror	r23
     e4a:	67 95       	ror	r22
     e4c:	b7 95       	ror	r27
     e4e:	f7 95       	ror	r31
     e50:	9e 3f       	cpi	r25, 0xFE	; 254
     e52:	08 f0       	brcs	.+2      	; 0xe56 <__addsf3x+0x96>
     e54:	b3 cf       	rjmp	.-154    	; 0xdbc <__addsf3+0x1e>
     e56:	93 95       	inc	r25
     e58:	88 0f       	add	r24, r24
     e5a:	08 f0       	brcs	.+2      	; 0xe5e <__addsf3x+0x9e>
     e5c:	99 27       	eor	r25, r25
     e5e:	ee 0f       	add	r30, r30
     e60:	97 95       	ror	r25
     e62:	87 95       	ror	r24
     e64:	08 95       	ret

00000e66 <__cmpsf2>:
     e66:	a8 d0       	rcall	.+336    	; 0xfb8 <__fp_cmp>
     e68:	08 f4       	brcc	.+2      	; 0xe6c <__cmpsf2+0x6>
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	08 95       	ret

00000e6e <__divsf3>:
     e6e:	0c d0       	rcall	.+24     	; 0xe88 <__divsf3x>
     e70:	de c0       	rjmp	.+444    	; 0x102e <__fp_round>
     e72:	d6 d0       	rcall	.+428    	; 0x1020 <__fp_pscB>
     e74:	40 f0       	brcs	.+16     	; 0xe86 <__divsf3+0x18>
     e76:	cd d0       	rcall	.+410    	; 0x1012 <__fp_pscA>
     e78:	30 f0       	brcs	.+12     	; 0xe86 <__divsf3+0x18>
     e7a:	21 f4       	brne	.+8      	; 0xe84 <__divsf3+0x16>
     e7c:	5f 3f       	cpi	r21, 0xFF	; 255
     e7e:	19 f0       	breq	.+6      	; 0xe86 <__divsf3+0x18>
     e80:	bf c0       	rjmp	.+382    	; 0x1000 <__fp_inf>
     e82:	51 11       	cpse	r21, r1
     e84:	08 c1       	rjmp	.+528    	; 0x1096 <__fp_szero>
     e86:	c2 c0       	rjmp	.+388    	; 0x100c <__fp_nan>

00000e88 <__divsf3x>:
     e88:	e3 d0       	rcall	.+454    	; 0x1050 <__fp_split3>
     e8a:	98 f3       	brcs	.-26     	; 0xe72 <__divsf3+0x4>

00000e8c <__divsf3_pse>:
     e8c:	99 23       	and	r25, r25
     e8e:	c9 f3       	breq	.-14     	; 0xe82 <__divsf3+0x14>
     e90:	55 23       	and	r21, r21
     e92:	b1 f3       	breq	.-20     	; 0xe80 <__divsf3+0x12>
     e94:	95 1b       	sub	r25, r21
     e96:	55 0b       	sbc	r21, r21
     e98:	bb 27       	eor	r27, r27
     e9a:	aa 27       	eor	r26, r26
     e9c:	62 17       	cp	r22, r18
     e9e:	73 07       	cpc	r23, r19
     ea0:	84 07       	cpc	r24, r20
     ea2:	38 f0       	brcs	.+14     	; 0xeb2 <__divsf3_pse+0x26>
     ea4:	9f 5f       	subi	r25, 0xFF	; 255
     ea6:	5f 4f       	sbci	r21, 0xFF	; 255
     ea8:	22 0f       	add	r18, r18
     eaa:	33 1f       	adc	r19, r19
     eac:	44 1f       	adc	r20, r20
     eae:	aa 1f       	adc	r26, r26
     eb0:	a9 f3       	breq	.-22     	; 0xe9c <__divsf3_pse+0x10>
     eb2:	33 d0       	rcall	.+102    	; 0xf1a <__divsf3_pse+0x8e>
     eb4:	0e 2e       	mov	r0, r30
     eb6:	3a f0       	brmi	.+14     	; 0xec6 <__divsf3_pse+0x3a>
     eb8:	e0 e8       	ldi	r30, 0x80	; 128
     eba:	30 d0       	rcall	.+96     	; 0xf1c <__divsf3_pse+0x90>
     ebc:	91 50       	subi	r25, 0x01	; 1
     ebe:	50 40       	sbci	r21, 0x00	; 0
     ec0:	e6 95       	lsr	r30
     ec2:	00 1c       	adc	r0, r0
     ec4:	ca f7       	brpl	.-14     	; 0xeb8 <__divsf3_pse+0x2c>
     ec6:	29 d0       	rcall	.+82     	; 0xf1a <__divsf3_pse+0x8e>
     ec8:	fe 2f       	mov	r31, r30
     eca:	27 d0       	rcall	.+78     	; 0xf1a <__divsf3_pse+0x8e>
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	88 1f       	adc	r24, r24
     ed2:	bb 1f       	adc	r27, r27
     ed4:	26 17       	cp	r18, r22
     ed6:	37 07       	cpc	r19, r23
     ed8:	48 07       	cpc	r20, r24
     eda:	ab 07       	cpc	r26, r27
     edc:	b0 e8       	ldi	r27, 0x80	; 128
     ede:	09 f0       	breq	.+2      	; 0xee2 <__divsf3_pse+0x56>
     ee0:	bb 0b       	sbc	r27, r27
     ee2:	80 2d       	mov	r24, r0
     ee4:	bf 01       	movw	r22, r30
     ee6:	ff 27       	eor	r31, r31
     ee8:	93 58       	subi	r25, 0x83	; 131
     eea:	5f 4f       	sbci	r21, 0xFF	; 255
     eec:	2a f0       	brmi	.+10     	; 0xef8 <__divsf3_pse+0x6c>
     eee:	9e 3f       	cpi	r25, 0xFE	; 254
     ef0:	51 05       	cpc	r21, r1
     ef2:	68 f0       	brcs	.+26     	; 0xf0e <__divsf3_pse+0x82>
     ef4:	85 c0       	rjmp	.+266    	; 0x1000 <__fp_inf>
     ef6:	cf c0       	rjmp	.+414    	; 0x1096 <__fp_szero>
     ef8:	5f 3f       	cpi	r21, 0xFF	; 255
     efa:	ec f3       	brlt	.-6      	; 0xef6 <__divsf3_pse+0x6a>
     efc:	98 3e       	cpi	r25, 0xE8	; 232
     efe:	dc f3       	brlt	.-10     	; 0xef6 <__divsf3_pse+0x6a>
     f00:	86 95       	lsr	r24
     f02:	77 95       	ror	r23
     f04:	67 95       	ror	r22
     f06:	b7 95       	ror	r27
     f08:	f7 95       	ror	r31
     f0a:	9f 5f       	subi	r25, 0xFF	; 255
     f0c:	c9 f7       	brne	.-14     	; 0xf00 <__divsf3_pse+0x74>
     f0e:	88 0f       	add	r24, r24
     f10:	91 1d       	adc	r25, r1
     f12:	96 95       	lsr	r25
     f14:	87 95       	ror	r24
     f16:	97 f9       	bld	r25, 7
     f18:	08 95       	ret
     f1a:	e1 e0       	ldi	r30, 0x01	; 1
     f1c:	66 0f       	add	r22, r22
     f1e:	77 1f       	adc	r23, r23
     f20:	88 1f       	adc	r24, r24
     f22:	bb 1f       	adc	r27, r27
     f24:	62 17       	cp	r22, r18
     f26:	73 07       	cpc	r23, r19
     f28:	84 07       	cpc	r24, r20
     f2a:	ba 07       	cpc	r27, r26
     f2c:	20 f0       	brcs	.+8      	; 0xf36 <__divsf3_pse+0xaa>
     f2e:	62 1b       	sub	r22, r18
     f30:	73 0b       	sbc	r23, r19
     f32:	84 0b       	sbc	r24, r20
     f34:	ba 0b       	sbc	r27, r26
     f36:	ee 1f       	adc	r30, r30
     f38:	88 f7       	brcc	.-30     	; 0xf1c <__divsf3_pse+0x90>
     f3a:	e0 95       	com	r30
     f3c:	08 95       	ret

00000f3e <__floatunsisf>:
     f3e:	e8 94       	clt
     f40:	09 c0       	rjmp	.+18     	; 0xf54 <__floatsisf+0x12>

00000f42 <__floatsisf>:
     f42:	97 fb       	bst	r25, 7
     f44:	3e f4       	brtc	.+14     	; 0xf54 <__floatsisf+0x12>
     f46:	90 95       	com	r25
     f48:	80 95       	com	r24
     f4a:	70 95       	com	r23
     f4c:	61 95       	neg	r22
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	99 23       	and	r25, r25
     f56:	a9 f0       	breq	.+42     	; 0xf82 <__floatsisf+0x40>
     f58:	f9 2f       	mov	r31, r25
     f5a:	96 e9       	ldi	r25, 0x96	; 150
     f5c:	bb 27       	eor	r27, r27
     f5e:	93 95       	inc	r25
     f60:	f6 95       	lsr	r31
     f62:	87 95       	ror	r24
     f64:	77 95       	ror	r23
     f66:	67 95       	ror	r22
     f68:	b7 95       	ror	r27
     f6a:	f1 11       	cpse	r31, r1
     f6c:	f8 cf       	rjmp	.-16     	; 0xf5e <__floatsisf+0x1c>
     f6e:	fa f4       	brpl	.+62     	; 0xfae <__floatsisf+0x6c>
     f70:	bb 0f       	add	r27, r27
     f72:	11 f4       	brne	.+4      	; 0xf78 <__floatsisf+0x36>
     f74:	60 ff       	sbrs	r22, 0
     f76:	1b c0       	rjmp	.+54     	; 0xfae <__floatsisf+0x6c>
     f78:	6f 5f       	subi	r22, 0xFF	; 255
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	8f 4f       	sbci	r24, 0xFF	; 255
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	16 c0       	rjmp	.+44     	; 0xfae <__floatsisf+0x6c>
     f82:	88 23       	and	r24, r24
     f84:	11 f0       	breq	.+4      	; 0xf8a <__floatsisf+0x48>
     f86:	96 e9       	ldi	r25, 0x96	; 150
     f88:	11 c0       	rjmp	.+34     	; 0xfac <__floatsisf+0x6a>
     f8a:	77 23       	and	r23, r23
     f8c:	21 f0       	breq	.+8      	; 0xf96 <__floatsisf+0x54>
     f8e:	9e e8       	ldi	r25, 0x8E	; 142
     f90:	87 2f       	mov	r24, r23
     f92:	76 2f       	mov	r23, r22
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <__floatsisf+0x5e>
     f96:	66 23       	and	r22, r22
     f98:	71 f0       	breq	.+28     	; 0xfb6 <__floatsisf+0x74>
     f9a:	96 e8       	ldi	r25, 0x86	; 134
     f9c:	86 2f       	mov	r24, r22
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	2a f0       	brmi	.+10     	; 0xfae <__floatsisf+0x6c>
     fa4:	9a 95       	dec	r25
     fa6:	66 0f       	add	r22, r22
     fa8:	77 1f       	adc	r23, r23
     faa:	88 1f       	adc	r24, r24
     fac:	da f7       	brpl	.-10     	; 0xfa4 <__floatsisf+0x62>
     fae:	88 0f       	add	r24, r24
     fb0:	96 95       	lsr	r25
     fb2:	87 95       	ror	r24
     fb4:	97 f9       	bld	r25, 7
     fb6:	08 95       	ret

00000fb8 <__fp_cmp>:
     fb8:	99 0f       	add	r25, r25
     fba:	00 08       	sbc	r0, r0
     fbc:	55 0f       	add	r21, r21
     fbe:	aa 0b       	sbc	r26, r26
     fc0:	e0 e8       	ldi	r30, 0x80	; 128
     fc2:	fe ef       	ldi	r31, 0xFE	; 254
     fc4:	16 16       	cp	r1, r22
     fc6:	17 06       	cpc	r1, r23
     fc8:	e8 07       	cpc	r30, r24
     fca:	f9 07       	cpc	r31, r25
     fcc:	c0 f0       	brcs	.+48     	; 0xffe <__fp_cmp+0x46>
     fce:	12 16       	cp	r1, r18
     fd0:	13 06       	cpc	r1, r19
     fd2:	e4 07       	cpc	r30, r20
     fd4:	f5 07       	cpc	r31, r21
     fd6:	98 f0       	brcs	.+38     	; 0xffe <__fp_cmp+0x46>
     fd8:	62 1b       	sub	r22, r18
     fda:	73 0b       	sbc	r23, r19
     fdc:	84 0b       	sbc	r24, r20
     fde:	95 0b       	sbc	r25, r21
     fe0:	39 f4       	brne	.+14     	; 0xff0 <__fp_cmp+0x38>
     fe2:	0a 26       	eor	r0, r26
     fe4:	61 f0       	breq	.+24     	; 0xffe <__fp_cmp+0x46>
     fe6:	23 2b       	or	r18, r19
     fe8:	24 2b       	or	r18, r20
     fea:	25 2b       	or	r18, r21
     fec:	21 f4       	brne	.+8      	; 0xff6 <__fp_cmp+0x3e>
     fee:	08 95       	ret
     ff0:	0a 26       	eor	r0, r26
     ff2:	09 f4       	brne	.+2      	; 0xff6 <__fp_cmp+0x3e>
     ff4:	a1 40       	sbci	r26, 0x01	; 1
     ff6:	a6 95       	lsr	r26
     ff8:	8f ef       	ldi	r24, 0xFF	; 255
     ffa:	81 1d       	adc	r24, r1
     ffc:	81 1d       	adc	r24, r1
     ffe:	08 95       	ret

00001000 <__fp_inf>:
    1000:	97 f9       	bld	r25, 7
    1002:	9f 67       	ori	r25, 0x7F	; 127
    1004:	80 e8       	ldi	r24, 0x80	; 128
    1006:	70 e0       	ldi	r23, 0x00	; 0
    1008:	60 e0       	ldi	r22, 0x00	; 0
    100a:	08 95       	ret

0000100c <__fp_nan>:
    100c:	9f ef       	ldi	r25, 0xFF	; 255
    100e:	80 ec       	ldi	r24, 0xC0	; 192
    1010:	08 95       	ret

00001012 <__fp_pscA>:
    1012:	00 24       	eor	r0, r0
    1014:	0a 94       	dec	r0
    1016:	16 16       	cp	r1, r22
    1018:	17 06       	cpc	r1, r23
    101a:	18 06       	cpc	r1, r24
    101c:	09 06       	cpc	r0, r25
    101e:	08 95       	ret

00001020 <__fp_pscB>:
    1020:	00 24       	eor	r0, r0
    1022:	0a 94       	dec	r0
    1024:	12 16       	cp	r1, r18
    1026:	13 06       	cpc	r1, r19
    1028:	14 06       	cpc	r1, r20
    102a:	05 06       	cpc	r0, r21
    102c:	08 95       	ret

0000102e <__fp_round>:
    102e:	09 2e       	mov	r0, r25
    1030:	03 94       	inc	r0
    1032:	00 0c       	add	r0, r0
    1034:	11 f4       	brne	.+4      	; 0x103a <__fp_round+0xc>
    1036:	88 23       	and	r24, r24
    1038:	52 f0       	brmi	.+20     	; 0x104e <__fp_round+0x20>
    103a:	bb 0f       	add	r27, r27
    103c:	40 f4       	brcc	.+16     	; 0x104e <__fp_round+0x20>
    103e:	bf 2b       	or	r27, r31
    1040:	11 f4       	brne	.+4      	; 0x1046 <__fp_round+0x18>
    1042:	60 ff       	sbrs	r22, 0
    1044:	04 c0       	rjmp	.+8      	; 0x104e <__fp_round+0x20>
    1046:	6f 5f       	subi	r22, 0xFF	; 255
    1048:	7f 4f       	sbci	r23, 0xFF	; 255
    104a:	8f 4f       	sbci	r24, 0xFF	; 255
    104c:	9f 4f       	sbci	r25, 0xFF	; 255
    104e:	08 95       	ret

00001050 <__fp_split3>:
    1050:	57 fd       	sbrc	r21, 7
    1052:	90 58       	subi	r25, 0x80	; 128
    1054:	44 0f       	add	r20, r20
    1056:	55 1f       	adc	r21, r21
    1058:	59 f0       	breq	.+22     	; 0x1070 <__fp_splitA+0x10>
    105a:	5f 3f       	cpi	r21, 0xFF	; 255
    105c:	71 f0       	breq	.+28     	; 0x107a <__fp_splitA+0x1a>
    105e:	47 95       	ror	r20

00001060 <__fp_splitA>:
    1060:	88 0f       	add	r24, r24
    1062:	97 fb       	bst	r25, 7
    1064:	99 1f       	adc	r25, r25
    1066:	61 f0       	breq	.+24     	; 0x1080 <__fp_splitA+0x20>
    1068:	9f 3f       	cpi	r25, 0xFF	; 255
    106a:	79 f0       	breq	.+30     	; 0x108a <__fp_splitA+0x2a>
    106c:	87 95       	ror	r24
    106e:	08 95       	ret
    1070:	12 16       	cp	r1, r18
    1072:	13 06       	cpc	r1, r19
    1074:	14 06       	cpc	r1, r20
    1076:	55 1f       	adc	r21, r21
    1078:	f2 cf       	rjmp	.-28     	; 0x105e <__fp_split3+0xe>
    107a:	46 95       	lsr	r20
    107c:	f1 df       	rcall	.-30     	; 0x1060 <__fp_splitA>
    107e:	08 c0       	rjmp	.+16     	; 0x1090 <__fp_splitA+0x30>
    1080:	16 16       	cp	r1, r22
    1082:	17 06       	cpc	r1, r23
    1084:	18 06       	cpc	r1, r24
    1086:	99 1f       	adc	r25, r25
    1088:	f1 cf       	rjmp	.-30     	; 0x106c <__fp_splitA+0xc>
    108a:	86 95       	lsr	r24
    108c:	71 05       	cpc	r23, r1
    108e:	61 05       	cpc	r22, r1
    1090:	08 94       	sec
    1092:	08 95       	ret

00001094 <__fp_zero>:
    1094:	e8 94       	clt

00001096 <__fp_szero>:
    1096:	bb 27       	eor	r27, r27
    1098:	66 27       	eor	r22, r22
    109a:	77 27       	eor	r23, r23
    109c:	cb 01       	movw	r24, r22
    109e:	97 f9       	bld	r25, 7
    10a0:	08 95       	ret

000010a2 <__mulsf3>:
    10a2:	0b d0       	rcall	.+22     	; 0x10ba <__mulsf3x>
    10a4:	c4 cf       	rjmp	.-120    	; 0x102e <__fp_round>
    10a6:	b5 df       	rcall	.-150    	; 0x1012 <__fp_pscA>
    10a8:	28 f0       	brcs	.+10     	; 0x10b4 <__mulsf3+0x12>
    10aa:	ba df       	rcall	.-140    	; 0x1020 <__fp_pscB>
    10ac:	18 f0       	brcs	.+6      	; 0x10b4 <__mulsf3+0x12>
    10ae:	95 23       	and	r25, r21
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <__mulsf3+0x12>
    10b2:	a6 cf       	rjmp	.-180    	; 0x1000 <__fp_inf>
    10b4:	ab cf       	rjmp	.-170    	; 0x100c <__fp_nan>
    10b6:	11 24       	eor	r1, r1
    10b8:	ee cf       	rjmp	.-36     	; 0x1096 <__fp_szero>

000010ba <__mulsf3x>:
    10ba:	ca df       	rcall	.-108    	; 0x1050 <__fp_split3>
    10bc:	a0 f3       	brcs	.-24     	; 0x10a6 <__mulsf3+0x4>

000010be <__mulsf3_pse>:
    10be:	95 9f       	mul	r25, r21
    10c0:	d1 f3       	breq	.-12     	; 0x10b6 <__mulsf3+0x14>
    10c2:	95 0f       	add	r25, r21
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	55 1f       	adc	r21, r21
    10c8:	62 9f       	mul	r22, r18
    10ca:	f0 01       	movw	r30, r0
    10cc:	72 9f       	mul	r23, r18
    10ce:	bb 27       	eor	r27, r27
    10d0:	f0 0d       	add	r31, r0
    10d2:	b1 1d       	adc	r27, r1
    10d4:	63 9f       	mul	r22, r19
    10d6:	aa 27       	eor	r26, r26
    10d8:	f0 0d       	add	r31, r0
    10da:	b1 1d       	adc	r27, r1
    10dc:	aa 1f       	adc	r26, r26
    10de:	64 9f       	mul	r22, r20
    10e0:	66 27       	eor	r22, r22
    10e2:	b0 0d       	add	r27, r0
    10e4:	a1 1d       	adc	r26, r1
    10e6:	66 1f       	adc	r22, r22
    10e8:	82 9f       	mul	r24, r18
    10ea:	22 27       	eor	r18, r18
    10ec:	b0 0d       	add	r27, r0
    10ee:	a1 1d       	adc	r26, r1
    10f0:	62 1f       	adc	r22, r18
    10f2:	73 9f       	mul	r23, r19
    10f4:	b0 0d       	add	r27, r0
    10f6:	a1 1d       	adc	r26, r1
    10f8:	62 1f       	adc	r22, r18
    10fa:	83 9f       	mul	r24, r19
    10fc:	a0 0d       	add	r26, r0
    10fe:	61 1d       	adc	r22, r1
    1100:	22 1f       	adc	r18, r18
    1102:	74 9f       	mul	r23, r20
    1104:	33 27       	eor	r19, r19
    1106:	a0 0d       	add	r26, r0
    1108:	61 1d       	adc	r22, r1
    110a:	23 1f       	adc	r18, r19
    110c:	84 9f       	mul	r24, r20
    110e:	60 0d       	add	r22, r0
    1110:	21 1d       	adc	r18, r1
    1112:	82 2f       	mov	r24, r18
    1114:	76 2f       	mov	r23, r22
    1116:	6a 2f       	mov	r22, r26
    1118:	11 24       	eor	r1, r1
    111a:	9f 57       	subi	r25, 0x7F	; 127
    111c:	50 40       	sbci	r21, 0x00	; 0
    111e:	8a f0       	brmi	.+34     	; 0x1142 <__stack+0x43>
    1120:	e1 f0       	breq	.+56     	; 0x115a <__stack+0x5b>
    1122:	88 23       	and	r24, r24
    1124:	4a f0       	brmi	.+18     	; 0x1138 <__stack+0x39>
    1126:	ee 0f       	add	r30, r30
    1128:	ff 1f       	adc	r31, r31
    112a:	bb 1f       	adc	r27, r27
    112c:	66 1f       	adc	r22, r22
    112e:	77 1f       	adc	r23, r23
    1130:	88 1f       	adc	r24, r24
    1132:	91 50       	subi	r25, 0x01	; 1
    1134:	50 40       	sbci	r21, 0x00	; 0
    1136:	a9 f7       	brne	.-22     	; 0x1122 <__stack+0x23>
    1138:	9e 3f       	cpi	r25, 0xFE	; 254
    113a:	51 05       	cpc	r21, r1
    113c:	70 f0       	brcs	.+28     	; 0x115a <__stack+0x5b>
    113e:	60 cf       	rjmp	.-320    	; 0x1000 <__fp_inf>
    1140:	aa cf       	rjmp	.-172    	; 0x1096 <__fp_szero>
    1142:	5f 3f       	cpi	r21, 0xFF	; 255
    1144:	ec f3       	brlt	.-6      	; 0x1140 <__stack+0x41>
    1146:	98 3e       	cpi	r25, 0xE8	; 232
    1148:	dc f3       	brlt	.-10     	; 0x1140 <__stack+0x41>
    114a:	86 95       	lsr	r24
    114c:	77 95       	ror	r23
    114e:	67 95       	ror	r22
    1150:	b7 95       	ror	r27
    1152:	f7 95       	ror	r31
    1154:	e7 95       	ror	r30
    1156:	9f 5f       	subi	r25, 0xFF	; 255
    1158:	c1 f7       	brne	.-16     	; 0x114a <__stack+0x4b>
    115a:	fe 2b       	or	r31, r30
    115c:	88 0f       	add	r24, r24
    115e:	91 1d       	adc	r25, r1
    1160:	96 95       	lsr	r25
    1162:	87 95       	ror	r24
    1164:	97 f9       	bld	r25, 7
    1166:	08 95       	ret

00001168 <pow>:
    1168:	fa 01       	movw	r30, r20
    116a:	ee 0f       	add	r30, r30
    116c:	ff 1f       	adc	r31, r31
    116e:	30 96       	adiw	r30, 0x00	; 0
    1170:	21 05       	cpc	r18, r1
    1172:	31 05       	cpc	r19, r1
    1174:	99 f1       	breq	.+102    	; 0x11dc <pow+0x74>
    1176:	61 15       	cp	r22, r1
    1178:	71 05       	cpc	r23, r1
    117a:	61 f4       	brne	.+24     	; 0x1194 <pow+0x2c>
    117c:	80 38       	cpi	r24, 0x80	; 128
    117e:	bf e3       	ldi	r27, 0x3F	; 63
    1180:	9b 07       	cpc	r25, r27
    1182:	49 f1       	breq	.+82     	; 0x11d6 <pow+0x6e>
    1184:	68 94       	set
    1186:	90 38       	cpi	r25, 0x80	; 128
    1188:	81 05       	cpc	r24, r1
    118a:	61 f0       	breq	.+24     	; 0x11a4 <pow+0x3c>
    118c:	80 38       	cpi	r24, 0x80	; 128
    118e:	bf ef       	ldi	r27, 0xFF	; 255
    1190:	9b 07       	cpc	r25, r27
    1192:	41 f0       	breq	.+16     	; 0x11a4 <pow+0x3c>
    1194:	99 23       	and	r25, r25
    1196:	42 f5       	brpl	.+80     	; 0x11e8 <pow+0x80>
    1198:	ff 3f       	cpi	r31, 0xFF	; 255
    119a:	e1 05       	cpc	r30, r1
    119c:	31 05       	cpc	r19, r1
    119e:	21 05       	cpc	r18, r1
    11a0:	11 f1       	breq	.+68     	; 0x11e6 <pow+0x7e>
    11a2:	e8 94       	clt
    11a4:	08 94       	sec
    11a6:	e7 95       	ror	r30
    11a8:	d9 01       	movw	r26, r18
    11aa:	aa 23       	and	r26, r26
    11ac:	29 f4       	brne	.+10     	; 0x11b8 <pow+0x50>
    11ae:	ab 2f       	mov	r26, r27
    11b0:	be 2f       	mov	r27, r30
    11b2:	f8 5f       	subi	r31, 0xF8	; 248
    11b4:	d0 f3       	brcs	.-12     	; 0x11aa <pow+0x42>
    11b6:	10 c0       	rjmp	.+32     	; 0x11d8 <pow+0x70>
    11b8:	ff 5f       	subi	r31, 0xFF	; 255
    11ba:	70 f4       	brcc	.+28     	; 0x11d8 <pow+0x70>
    11bc:	a6 95       	lsr	r26
    11be:	e0 f7       	brcc	.-8      	; 0x11b8 <pow+0x50>
    11c0:	f7 39       	cpi	r31, 0x97	; 151
    11c2:	50 f0       	brcs	.+20     	; 0x11d8 <pow+0x70>
    11c4:	19 f0       	breq	.+6      	; 0x11cc <pow+0x64>
    11c6:	ff 3a       	cpi	r31, 0xAF	; 175
    11c8:	38 f4       	brcc	.+14     	; 0x11d8 <pow+0x70>
    11ca:	9f 77       	andi	r25, 0x7F	; 127
    11cc:	9f 93       	push	r25
    11ce:	0c d0       	rcall	.+24     	; 0x11e8 <pow+0x80>
    11d0:	0f 90       	pop	r0
    11d2:	07 fc       	sbrc	r0, 7
    11d4:	90 58       	subi	r25, 0x80	; 128
    11d6:	08 95       	ret
    11d8:	3e f0       	brts	.+14     	; 0x11e8 <pow+0x80>
    11da:	18 cf       	rjmp	.-464    	; 0x100c <__fp_nan>
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	80 e8       	ldi	r24, 0x80	; 128
    11e2:	9f e3       	ldi	r25, 0x3F	; 63
    11e4:	08 95       	ret
    11e6:	4f e7       	ldi	r20, 0x7F	; 127
    11e8:	9f 77       	andi	r25, 0x7F	; 127
    11ea:	5f 93       	push	r21
    11ec:	4f 93       	push	r20
    11ee:	3f 93       	push	r19
    11f0:	2f 93       	push	r18
    11f2:	9e d0       	rcall	.+316    	; 0x1330 <log>
    11f4:	2f 91       	pop	r18
    11f6:	3f 91       	pop	r19
    11f8:	4f 91       	pop	r20
    11fa:	5f 91       	pop	r21
    11fc:	52 df       	rcall	.-348    	; 0x10a2 <__mulsf3>
    11fe:	05 c0       	rjmp	.+10     	; 0x120a <exp>
    1200:	19 f4       	brne	.+6      	; 0x1208 <pow+0xa0>
    1202:	0e f0       	brts	.+2      	; 0x1206 <pow+0x9e>
    1204:	fd ce       	rjmp	.-518    	; 0x1000 <__fp_inf>
    1206:	46 cf       	rjmp	.-372    	; 0x1094 <__fp_zero>
    1208:	01 cf       	rjmp	.-510    	; 0x100c <__fp_nan>

0000120a <exp>:
    120a:	2a df       	rcall	.-428    	; 0x1060 <__fp_splitA>
    120c:	c8 f3       	brcs	.-14     	; 0x1200 <pow+0x98>
    120e:	96 38       	cpi	r25, 0x86	; 134
    1210:	c0 f7       	brcc	.-16     	; 0x1202 <pow+0x9a>
    1212:	07 f8       	bld	r0, 7
    1214:	0f 92       	push	r0
    1216:	e8 94       	clt
    1218:	2b e3       	ldi	r18, 0x3B	; 59
    121a:	3a ea       	ldi	r19, 0xAA	; 170
    121c:	48 eb       	ldi	r20, 0xB8	; 184
    121e:	5f e7       	ldi	r21, 0x7F	; 127
    1220:	4e df       	rcall	.-356    	; 0x10be <__mulsf3_pse>
    1222:	0f 92       	push	r0
    1224:	0f 92       	push	r0
    1226:	0f 92       	push	r0
    1228:	4d b7       	in	r20, 0x3d	; 61
    122a:	5e b7       	in	r21, 0x3e	; 62
    122c:	0f 92       	push	r0
    122e:	c0 d0       	rcall	.+384    	; 0x13b0 <modf>
    1230:	ec e8       	ldi	r30, 0x8C	; 140
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	16 d0       	rcall	.+44     	; 0x1262 <__fp_powser>
    1236:	4f 91       	pop	r20
    1238:	5f 91       	pop	r21
    123a:	ef 91       	pop	r30
    123c:	ff 91       	pop	r31
    123e:	e5 95       	asr	r30
    1240:	ee 1f       	adc	r30, r30
    1242:	ff 1f       	adc	r31, r31
    1244:	49 f0       	breq	.+18     	; 0x1258 <exp+0x4e>
    1246:	fe 57       	subi	r31, 0x7E	; 126
    1248:	e0 68       	ori	r30, 0x80	; 128
    124a:	44 27       	eor	r20, r20
    124c:	ee 0f       	add	r30, r30
    124e:	44 1f       	adc	r20, r20
    1250:	fa 95       	dec	r31
    1252:	e1 f7       	brne	.-8      	; 0x124c <exp+0x42>
    1254:	41 95       	neg	r20
    1256:	55 0b       	sbc	r21, r21
    1258:	32 d0       	rcall	.+100    	; 0x12be <ldexp>
    125a:	0f 90       	pop	r0
    125c:	07 fe       	sbrs	r0, 7
    125e:	26 c0       	rjmp	.+76     	; 0x12ac <inverse>
    1260:	08 95       	ret

00001262 <__fp_powser>:
    1262:	df 93       	push	r29
    1264:	cf 93       	push	r28
    1266:	1f 93       	push	r17
    1268:	0f 93       	push	r16
    126a:	ff 92       	push	r15
    126c:	ef 92       	push	r14
    126e:	df 92       	push	r13
    1270:	7b 01       	movw	r14, r22
    1272:	8c 01       	movw	r16, r24
    1274:	68 94       	set
    1276:	05 c0       	rjmp	.+10     	; 0x1282 <__fp_powser+0x20>
    1278:	da 2e       	mov	r13, r26
    127a:	ef 01       	movw	r28, r30
    127c:	1e df       	rcall	.-452    	; 0x10ba <__mulsf3x>
    127e:	fe 01       	movw	r30, r28
    1280:	e8 94       	clt
    1282:	a5 91       	lpm	r26, Z+
    1284:	25 91       	lpm	r18, Z+
    1286:	35 91       	lpm	r19, Z+
    1288:	45 91       	lpm	r20, Z+
    128a:	55 91       	lpm	r21, Z+
    128c:	ae f3       	brts	.-22     	; 0x1278 <__fp_powser+0x16>
    128e:	ef 01       	movw	r28, r30
    1290:	97 dd       	rcall	.-1234   	; 0xdc0 <__addsf3x>
    1292:	fe 01       	movw	r30, r28
    1294:	97 01       	movw	r18, r14
    1296:	a8 01       	movw	r20, r16
    1298:	da 94       	dec	r13
    129a:	79 f7       	brne	.-34     	; 0x127a <__fp_powser+0x18>
    129c:	df 90       	pop	r13
    129e:	ef 90       	pop	r14
    12a0:	ff 90       	pop	r15
    12a2:	0f 91       	pop	r16
    12a4:	1f 91       	pop	r17
    12a6:	cf 91       	pop	r28
    12a8:	df 91       	pop	r29
    12aa:	08 95       	ret

000012ac <inverse>:
    12ac:	9b 01       	movw	r18, r22
    12ae:	ac 01       	movw	r20, r24
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	80 e8       	ldi	r24, 0x80	; 128
    12b6:	9f e3       	ldi	r25, 0x3F	; 63
    12b8:	da cd       	rjmp	.-1100   	; 0xe6e <__divsf3>
    12ba:	a2 ce       	rjmp	.-700    	; 0x1000 <__fp_inf>
    12bc:	ac c0       	rjmp	.+344    	; 0x1416 <__fp_mpack>

000012be <ldexp>:
    12be:	d0 de       	rcall	.-608    	; 0x1060 <__fp_splitA>
    12c0:	e8 f3       	brcs	.-6      	; 0x12bc <inverse+0x10>
    12c2:	99 23       	and	r25, r25
    12c4:	d9 f3       	breq	.-10     	; 0x12bc <inverse+0x10>
    12c6:	94 0f       	add	r25, r20
    12c8:	51 1d       	adc	r21, r1
    12ca:	bb f3       	brvs	.-18     	; 0x12ba <inverse+0xe>
    12cc:	91 50       	subi	r25, 0x01	; 1
    12ce:	50 40       	sbci	r21, 0x00	; 0
    12d0:	94 f0       	brlt	.+36     	; 0x12f6 <ldexp+0x38>
    12d2:	59 f0       	breq	.+22     	; 0x12ea <ldexp+0x2c>
    12d4:	88 23       	and	r24, r24
    12d6:	32 f0       	brmi	.+12     	; 0x12e4 <ldexp+0x26>
    12d8:	66 0f       	add	r22, r22
    12da:	77 1f       	adc	r23, r23
    12dc:	88 1f       	adc	r24, r24
    12de:	91 50       	subi	r25, 0x01	; 1
    12e0:	50 40       	sbci	r21, 0x00	; 0
    12e2:	c1 f7       	brne	.-16     	; 0x12d4 <ldexp+0x16>
    12e4:	9e 3f       	cpi	r25, 0xFE	; 254
    12e6:	51 05       	cpc	r21, r1
    12e8:	44 f7       	brge	.-48     	; 0x12ba <inverse+0xe>
    12ea:	88 0f       	add	r24, r24
    12ec:	91 1d       	adc	r25, r1
    12ee:	96 95       	lsr	r25
    12f0:	87 95       	ror	r24
    12f2:	97 f9       	bld	r25, 7
    12f4:	08 95       	ret
    12f6:	5f 3f       	cpi	r21, 0xFF	; 255
    12f8:	ac f0       	brlt	.+42     	; 0x1324 <ldexp+0x66>
    12fa:	98 3e       	cpi	r25, 0xE8	; 232
    12fc:	9c f0       	brlt	.+38     	; 0x1324 <ldexp+0x66>
    12fe:	bb 27       	eor	r27, r27
    1300:	86 95       	lsr	r24
    1302:	77 95       	ror	r23
    1304:	67 95       	ror	r22
    1306:	b7 95       	ror	r27
    1308:	08 f4       	brcc	.+2      	; 0x130c <ldexp+0x4e>
    130a:	b1 60       	ori	r27, 0x01	; 1
    130c:	93 95       	inc	r25
    130e:	c1 f7       	brne	.-16     	; 0x1300 <ldexp+0x42>
    1310:	bb 0f       	add	r27, r27
    1312:	58 f7       	brcc	.-42     	; 0x12ea <ldexp+0x2c>
    1314:	11 f4       	brne	.+4      	; 0x131a <ldexp+0x5c>
    1316:	60 ff       	sbrs	r22, 0
    1318:	e8 cf       	rjmp	.-48     	; 0x12ea <ldexp+0x2c>
    131a:	6f 5f       	subi	r22, 0xFF	; 255
    131c:	7f 4f       	sbci	r23, 0xFF	; 255
    131e:	8f 4f       	sbci	r24, 0xFF	; 255
    1320:	9f 4f       	sbci	r25, 0xFF	; 255
    1322:	e3 cf       	rjmp	.-58     	; 0x12ea <ldexp+0x2c>
    1324:	b8 ce       	rjmp	.-656    	; 0x1096 <__fp_szero>
    1326:	0e f0       	brts	.+2      	; 0x132a <ldexp+0x6c>
    1328:	76 c0       	rjmp	.+236    	; 0x1416 <__fp_mpack>
    132a:	70 ce       	rjmp	.-800    	; 0x100c <__fp_nan>
    132c:	68 94       	set
    132e:	68 ce       	rjmp	.-816    	; 0x1000 <__fp_inf>

00001330 <log>:
    1330:	97 de       	rcall	.-722    	; 0x1060 <__fp_splitA>
    1332:	c8 f3       	brcs	.-14     	; 0x1326 <ldexp+0x68>
    1334:	99 23       	and	r25, r25
    1336:	d1 f3       	breq	.-12     	; 0x132c <ldexp+0x6e>
    1338:	c6 f3       	brts	.-16     	; 0x132a <ldexp+0x6c>
    133a:	df 93       	push	r29
    133c:	cf 93       	push	r28
    133e:	1f 93       	push	r17
    1340:	0f 93       	push	r16
    1342:	ff 92       	push	r15
    1344:	c9 2f       	mov	r28, r25
    1346:	dd 27       	eor	r29, r29
    1348:	88 23       	and	r24, r24
    134a:	2a f0       	brmi	.+10     	; 0x1356 <log+0x26>
    134c:	21 97       	sbiw	r28, 0x01	; 1
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	da f7       	brpl	.-10     	; 0x134c <log+0x1c>
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	40 e8       	ldi	r20, 0x80	; 128
    135c:	5f eb       	ldi	r21, 0xBF	; 191
    135e:	9f e3       	ldi	r25, 0x3F	; 63
    1360:	88 39       	cpi	r24, 0x98	; 152
    1362:	20 f0       	brcs	.+8      	; 0x136c <log+0x3c>
    1364:	80 3e       	cpi	r24, 0xE0	; 224
    1366:	30 f0       	brcs	.+12     	; 0x1374 <log+0x44>
    1368:	21 96       	adiw	r28, 0x01	; 1
    136a:	8f 77       	andi	r24, 0x7F	; 127
    136c:	18 dd       	rcall	.-1488   	; 0xd9e <__addsf3>
    136e:	e4 eb       	ldi	r30, 0xB4	; 180
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	03 c0       	rjmp	.+6      	; 0x137a <log+0x4a>
    1374:	14 dd       	rcall	.-1496   	; 0xd9e <__addsf3>
    1376:	e1 ee       	ldi	r30, 0xE1	; 225
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	73 df       	rcall	.-282    	; 0x1262 <__fp_powser>
    137c:	8b 01       	movw	r16, r22
    137e:	be 01       	movw	r22, r28
    1380:	ec 01       	movw	r28, r24
    1382:	fb 2e       	mov	r15, r27
    1384:	6f 57       	subi	r22, 0x7F	; 127
    1386:	71 09       	sbc	r23, r1
    1388:	75 95       	asr	r23
    138a:	77 1f       	adc	r23, r23
    138c:	88 0b       	sbc	r24, r24
    138e:	99 0b       	sbc	r25, r25
    1390:	d8 dd       	rcall	.-1104   	; 0xf42 <__floatsisf>
    1392:	28 e1       	ldi	r18, 0x18	; 24
    1394:	32 e7       	ldi	r19, 0x72	; 114
    1396:	41 e3       	ldi	r20, 0x31	; 49
    1398:	5f e3       	ldi	r21, 0x3F	; 63
    139a:	8f de       	rcall	.-738    	; 0x10ba <__mulsf3x>
    139c:	af 2d       	mov	r26, r15
    139e:	98 01       	movw	r18, r16
    13a0:	ae 01       	movw	r20, r28
    13a2:	ff 90       	pop	r15
    13a4:	0f 91       	pop	r16
    13a6:	1f 91       	pop	r17
    13a8:	cf 91       	pop	r28
    13aa:	df 91       	pop	r29
    13ac:	09 dd       	rcall	.-1518   	; 0xdc0 <__addsf3x>
    13ae:	3f ce       	rjmp	.-898    	; 0x102e <__fp_round>

000013b0 <modf>:
    13b0:	fa 01       	movw	r30, r20
    13b2:	dc 01       	movw	r26, r24
    13b4:	aa 0f       	add	r26, r26
    13b6:	bb 1f       	adc	r27, r27
    13b8:	9b 01       	movw	r18, r22
    13ba:	ac 01       	movw	r20, r24
    13bc:	bf 57       	subi	r27, 0x7F	; 127
    13be:	28 f4       	brcc	.+10     	; 0x13ca <modf+0x1a>
    13c0:	22 27       	eor	r18, r18
    13c2:	33 27       	eor	r19, r19
    13c4:	44 27       	eor	r20, r20
    13c6:	50 78       	andi	r21, 0x80	; 128
    13c8:	1f c0       	rjmp	.+62     	; 0x1408 <modf+0x58>
    13ca:	b7 51       	subi	r27, 0x17	; 23
    13cc:	88 f4       	brcc	.+34     	; 0x13f0 <modf+0x40>
    13ce:	ab 2f       	mov	r26, r27
    13d0:	00 24       	eor	r0, r0
    13d2:	46 95       	lsr	r20
    13d4:	37 95       	ror	r19
    13d6:	27 95       	ror	r18
    13d8:	01 1c       	adc	r0, r1
    13da:	a3 95       	inc	r26
    13dc:	d2 f3       	brmi	.-12     	; 0x13d2 <modf+0x22>
    13de:	00 20       	and	r0, r0
    13e0:	69 f0       	breq	.+26     	; 0x13fc <modf+0x4c>
    13e2:	22 0f       	add	r18, r18
    13e4:	33 1f       	adc	r19, r19
    13e6:	44 1f       	adc	r20, r20
    13e8:	b3 95       	inc	r27
    13ea:	da f3       	brmi	.-10     	; 0x13e2 <modf+0x32>
    13ec:	0d d0       	rcall	.+26     	; 0x1408 <modf+0x58>
    13ee:	d6 cc       	rjmp	.-1620   	; 0xd9c <__subsf3>
    13f0:	61 30       	cpi	r22, 0x01	; 1
    13f2:	71 05       	cpc	r23, r1
    13f4:	a0 e8       	ldi	r26, 0x80	; 128
    13f6:	8a 07       	cpc	r24, r26
    13f8:	b9 46       	sbci	r27, 0x69	; 105
    13fa:	30 f4       	brcc	.+12     	; 0x1408 <modf+0x58>
    13fc:	9b 01       	movw	r18, r22
    13fe:	ac 01       	movw	r20, r24
    1400:	66 27       	eor	r22, r22
    1402:	77 27       	eor	r23, r23
    1404:	88 27       	eor	r24, r24
    1406:	90 78       	andi	r25, 0x80	; 128
    1408:	30 96       	adiw	r30, 0x00	; 0
    140a:	21 f0       	breq	.+8      	; 0x1414 <modf+0x64>
    140c:	20 83       	st	Z, r18
    140e:	31 83       	std	Z+1, r19	; 0x01
    1410:	42 83       	std	Z+2, r20	; 0x02
    1412:	53 83       	std	Z+3, r21	; 0x03
    1414:	08 95       	ret

00001416 <__fp_mpack>:
    1416:	9f 3f       	cpi	r25, 0xFF	; 255
    1418:	31 f0       	breq	.+12     	; 0x1426 <__fp_mpack_finite+0xc>

0000141a <__fp_mpack_finite>:
    141a:	91 50       	subi	r25, 0x01	; 1
    141c:	20 f4       	brcc	.+8      	; 0x1426 <__fp_mpack_finite+0xc>
    141e:	87 95       	ror	r24
    1420:	77 95       	ror	r23
    1422:	67 95       	ror	r22
    1424:	b7 95       	ror	r27
    1426:	88 0f       	add	r24, r24
    1428:	91 1d       	adc	r25, r1
    142a:	96 95       	lsr	r25
    142c:	87 95       	ror	r24
    142e:	97 f9       	bld	r25, 7
    1430:	08 95       	ret

00001432 <__mulsi3>:
    1432:	db 01       	movw	r26, r22
    1434:	8f 93       	push	r24
    1436:	9f 93       	push	r25
    1438:	49 d0       	rcall	.+146    	; 0x14cc <__muluhisi3>
    143a:	bf 91       	pop	r27
    143c:	af 91       	pop	r26
    143e:	a2 9f       	mul	r26, r18
    1440:	80 0d       	add	r24, r0
    1442:	91 1d       	adc	r25, r1
    1444:	a3 9f       	mul	r26, r19
    1446:	90 0d       	add	r25, r0
    1448:	b2 9f       	mul	r27, r18
    144a:	90 0d       	add	r25, r0
    144c:	11 24       	eor	r1, r1
    144e:	08 95       	ret

00001450 <__udivmodsi4>:
    1450:	a1 e2       	ldi	r26, 0x21	; 33
    1452:	1a 2e       	mov	r1, r26
    1454:	aa 1b       	sub	r26, r26
    1456:	bb 1b       	sub	r27, r27
    1458:	fd 01       	movw	r30, r26
    145a:	0d c0       	rjmp	.+26     	; 0x1476 <__udivmodsi4_ep>

0000145c <__udivmodsi4_loop>:
    145c:	aa 1f       	adc	r26, r26
    145e:	bb 1f       	adc	r27, r27
    1460:	ee 1f       	adc	r30, r30
    1462:	ff 1f       	adc	r31, r31
    1464:	a2 17       	cp	r26, r18
    1466:	b3 07       	cpc	r27, r19
    1468:	e4 07       	cpc	r30, r20
    146a:	f5 07       	cpc	r31, r21
    146c:	20 f0       	brcs	.+8      	; 0x1476 <__udivmodsi4_ep>
    146e:	a2 1b       	sub	r26, r18
    1470:	b3 0b       	sbc	r27, r19
    1472:	e4 0b       	sbc	r30, r20
    1474:	f5 0b       	sbc	r31, r21

00001476 <__udivmodsi4_ep>:
    1476:	66 1f       	adc	r22, r22
    1478:	77 1f       	adc	r23, r23
    147a:	88 1f       	adc	r24, r24
    147c:	99 1f       	adc	r25, r25
    147e:	1a 94       	dec	r1
    1480:	69 f7       	brne	.-38     	; 0x145c <__udivmodsi4_loop>
    1482:	60 95       	com	r22
    1484:	70 95       	com	r23
    1486:	80 95       	com	r24
    1488:	90 95       	com	r25
    148a:	9b 01       	movw	r18, r22
    148c:	ac 01       	movw	r20, r24
    148e:	bd 01       	movw	r22, r26
    1490:	cf 01       	movw	r24, r30
    1492:	08 95       	ret

00001494 <__divmodsi4>:
    1494:	05 2e       	mov	r0, r21
    1496:	97 fb       	bst	r25, 7
    1498:	16 f4       	brtc	.+4      	; 0x149e <__divmodsi4+0xa>
    149a:	00 94       	com	r0
    149c:	0f d0       	rcall	.+30     	; 0x14bc <__negsi2>
    149e:	57 fd       	sbrc	r21, 7
    14a0:	05 d0       	rcall	.+10     	; 0x14ac <__divmodsi4_neg2>
    14a2:	d6 df       	rcall	.-84     	; 0x1450 <__udivmodsi4>
    14a4:	07 fc       	sbrc	r0, 7
    14a6:	02 d0       	rcall	.+4      	; 0x14ac <__divmodsi4_neg2>
    14a8:	46 f4       	brtc	.+16     	; 0x14ba <__divmodsi4_exit>
    14aa:	08 c0       	rjmp	.+16     	; 0x14bc <__negsi2>

000014ac <__divmodsi4_neg2>:
    14ac:	50 95       	com	r21
    14ae:	40 95       	com	r20
    14b0:	30 95       	com	r19
    14b2:	21 95       	neg	r18
    14b4:	3f 4f       	sbci	r19, 0xFF	; 255
    14b6:	4f 4f       	sbci	r20, 0xFF	; 255
    14b8:	5f 4f       	sbci	r21, 0xFF	; 255

000014ba <__divmodsi4_exit>:
    14ba:	08 95       	ret

000014bc <__negsi2>:
    14bc:	90 95       	com	r25
    14be:	80 95       	com	r24
    14c0:	70 95       	com	r23
    14c2:	61 95       	neg	r22
    14c4:	7f 4f       	sbci	r23, 0xFF	; 255
    14c6:	8f 4f       	sbci	r24, 0xFF	; 255
    14c8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ca:	08 95       	ret

000014cc <__muluhisi3>:
    14cc:	0f d0       	rcall	.+30     	; 0x14ec <__umulhisi3>
    14ce:	a5 9f       	mul	r26, r21
    14d0:	90 0d       	add	r25, r0
    14d2:	b4 9f       	mul	r27, r20
    14d4:	90 0d       	add	r25, r0
    14d6:	a4 9f       	mul	r26, r20
    14d8:	80 0d       	add	r24, r0
    14da:	91 1d       	adc	r25, r1
    14dc:	11 24       	eor	r1, r1
    14de:	08 95       	ret

000014e0 <__mulshisi3>:
    14e0:	b7 ff       	sbrs	r27, 7
    14e2:	f4 cf       	rjmp	.-24     	; 0x14cc <__muluhisi3>

000014e4 <__mulohisi3>:
    14e4:	f3 df       	rcall	.-26     	; 0x14cc <__muluhisi3>
    14e6:	82 1b       	sub	r24, r18
    14e8:	93 0b       	sbc	r25, r19
    14ea:	08 95       	ret

000014ec <__umulhisi3>:
    14ec:	a2 9f       	mul	r26, r18
    14ee:	b0 01       	movw	r22, r0
    14f0:	b3 9f       	mul	r27, r19
    14f2:	c0 01       	movw	r24, r0
    14f4:	a3 9f       	mul	r26, r19
    14f6:	70 0d       	add	r23, r0
    14f8:	81 1d       	adc	r24, r1
    14fa:	11 24       	eor	r1, r1
    14fc:	91 1d       	adc	r25, r1
    14fe:	b2 9f       	mul	r27, r18
    1500:	70 0d       	add	r23, r0
    1502:	81 1d       	adc	r24, r1
    1504:	11 24       	eor	r1, r1
    1506:	91 1d       	adc	r25, r1
    1508:	08 95       	ret

0000150a <printf>:
    150a:	cf 93       	push	r28
    150c:	df 93       	push	r29
    150e:	cd b7       	in	r28, 0x3d	; 61
    1510:	de b7       	in	r29, 0x3e	; 62
    1512:	ae 01       	movw	r20, r28
    1514:	4b 5f       	subi	r20, 0xFB	; 251
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	fa 01       	movw	r30, r20
    151a:	61 91       	ld	r22, Z+
    151c:	71 91       	ld	r23, Z+
    151e:	af 01       	movw	r20, r30
    1520:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <__iob+0x2>
    1524:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <__iob+0x3>
    1528:	33 d0       	rcall	.+102    	; 0x1590 <vfprintf>
    152a:	df 91       	pop	r29
    152c:	cf 91       	pop	r28
    152e:	08 95       	ret

00001530 <puts>:
    1530:	0f 93       	push	r16
    1532:	1f 93       	push	r17
    1534:	cf 93       	push	r28
    1536:	df 93       	push	r29
    1538:	e0 91 aa 02 	lds	r30, 0x02AA	; 0x8002aa <__iob+0x2>
    153c:	f0 91 ab 02 	lds	r31, 0x02AB	; 0x8002ab <__iob+0x3>
    1540:	23 81       	ldd	r18, Z+3	; 0x03
    1542:	21 ff       	sbrs	r18, 1
    1544:	1b c0       	rjmp	.+54     	; 0x157c <puts+0x4c>
    1546:	8c 01       	movw	r16, r24
    1548:	d0 e0       	ldi	r29, 0x00	; 0
    154a:	c0 e0       	ldi	r28, 0x00	; 0
    154c:	f8 01       	movw	r30, r16
    154e:	81 91       	ld	r24, Z+
    1550:	8f 01       	movw	r16, r30
    1552:	60 91 aa 02 	lds	r22, 0x02AA	; 0x8002aa <__iob+0x2>
    1556:	70 91 ab 02 	lds	r23, 0x02AB	; 0x8002ab <__iob+0x3>
    155a:	db 01       	movw	r26, r22
    155c:	18 96       	adiw	r26, 0x08	; 8
    155e:	ed 91       	ld	r30, X+
    1560:	fc 91       	ld	r31, X
    1562:	19 97       	sbiw	r26, 0x09	; 9
    1564:	88 23       	and	r24, r24
    1566:	31 f0       	breq	.+12     	; 0x1574 <puts+0x44>
    1568:	09 95       	icall
    156a:	89 2b       	or	r24, r25
    156c:	79 f3       	breq	.-34     	; 0x154c <puts+0x1c>
    156e:	df ef       	ldi	r29, 0xFF	; 255
    1570:	cf ef       	ldi	r28, 0xFF	; 255
    1572:	ec cf       	rjmp	.-40     	; 0x154c <puts+0x1c>
    1574:	8a e0       	ldi	r24, 0x0A	; 10
    1576:	09 95       	icall
    1578:	89 2b       	or	r24, r25
    157a:	19 f0       	breq	.+6      	; 0x1582 <puts+0x52>
    157c:	8f ef       	ldi	r24, 0xFF	; 255
    157e:	9f ef       	ldi	r25, 0xFF	; 255
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <puts+0x56>
    1582:	8d 2f       	mov	r24, r29
    1584:	9c 2f       	mov	r25, r28
    1586:	df 91       	pop	r29
    1588:	cf 91       	pop	r28
    158a:	1f 91       	pop	r17
    158c:	0f 91       	pop	r16
    158e:	08 95       	ret

00001590 <vfprintf>:
    1590:	2f 92       	push	r2
    1592:	3f 92       	push	r3
    1594:	4f 92       	push	r4
    1596:	5f 92       	push	r5
    1598:	6f 92       	push	r6
    159a:	7f 92       	push	r7
    159c:	8f 92       	push	r8
    159e:	9f 92       	push	r9
    15a0:	af 92       	push	r10
    15a2:	bf 92       	push	r11
    15a4:	cf 92       	push	r12
    15a6:	df 92       	push	r13
    15a8:	ef 92       	push	r14
    15aa:	ff 92       	push	r15
    15ac:	0f 93       	push	r16
    15ae:	1f 93       	push	r17
    15b0:	cf 93       	push	r28
    15b2:	df 93       	push	r29
    15b4:	cd b7       	in	r28, 0x3d	; 61
    15b6:	de b7       	in	r29, 0x3e	; 62
    15b8:	2b 97       	sbiw	r28, 0x0b	; 11
    15ba:	0f b6       	in	r0, 0x3f	; 63
    15bc:	f8 94       	cli
    15be:	de bf       	out	0x3e, r29	; 62
    15c0:	0f be       	out	0x3f, r0	; 63
    15c2:	cd bf       	out	0x3d, r28	; 61
    15c4:	6c 01       	movw	r12, r24
    15c6:	7b 01       	movw	r14, r22
    15c8:	8a 01       	movw	r16, r20
    15ca:	fc 01       	movw	r30, r24
    15cc:	17 82       	std	Z+7, r1	; 0x07
    15ce:	16 82       	std	Z+6, r1	; 0x06
    15d0:	83 81       	ldd	r24, Z+3	; 0x03
    15d2:	81 ff       	sbrs	r24, 1
    15d4:	bf c1       	rjmp	.+894    	; 0x1954 <vfprintf+0x3c4>
    15d6:	ce 01       	movw	r24, r28
    15d8:	01 96       	adiw	r24, 0x01	; 1
    15da:	3c 01       	movw	r6, r24
    15dc:	f6 01       	movw	r30, r12
    15de:	93 81       	ldd	r25, Z+3	; 0x03
    15e0:	f7 01       	movw	r30, r14
    15e2:	93 fd       	sbrc	r25, 3
    15e4:	85 91       	lpm	r24, Z+
    15e6:	93 ff       	sbrs	r25, 3
    15e8:	81 91       	ld	r24, Z+
    15ea:	7f 01       	movw	r14, r30
    15ec:	88 23       	and	r24, r24
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <vfprintf+0x62>
    15f0:	ad c1       	rjmp	.+858    	; 0x194c <vfprintf+0x3bc>
    15f2:	85 32       	cpi	r24, 0x25	; 37
    15f4:	39 f4       	brne	.+14     	; 0x1604 <vfprintf+0x74>
    15f6:	93 fd       	sbrc	r25, 3
    15f8:	85 91       	lpm	r24, Z+
    15fa:	93 ff       	sbrs	r25, 3
    15fc:	81 91       	ld	r24, Z+
    15fe:	7f 01       	movw	r14, r30
    1600:	85 32       	cpi	r24, 0x25	; 37
    1602:	21 f4       	brne	.+8      	; 0x160c <vfprintf+0x7c>
    1604:	b6 01       	movw	r22, r12
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	d6 d1       	rcall	.+940    	; 0x19b6 <fputc>
    160a:	e8 cf       	rjmp	.-48     	; 0x15dc <vfprintf+0x4c>
    160c:	91 2c       	mov	r9, r1
    160e:	21 2c       	mov	r2, r1
    1610:	31 2c       	mov	r3, r1
    1612:	ff e1       	ldi	r31, 0x1F	; 31
    1614:	f3 15       	cp	r31, r3
    1616:	d8 f0       	brcs	.+54     	; 0x164e <vfprintf+0xbe>
    1618:	8b 32       	cpi	r24, 0x2B	; 43
    161a:	79 f0       	breq	.+30     	; 0x163a <vfprintf+0xaa>
    161c:	38 f4       	brcc	.+14     	; 0x162c <vfprintf+0x9c>
    161e:	80 32       	cpi	r24, 0x20	; 32
    1620:	79 f0       	breq	.+30     	; 0x1640 <vfprintf+0xb0>
    1622:	83 32       	cpi	r24, 0x23	; 35
    1624:	a1 f4       	brne	.+40     	; 0x164e <vfprintf+0xbe>
    1626:	23 2d       	mov	r18, r3
    1628:	20 61       	ori	r18, 0x10	; 16
    162a:	1d c0       	rjmp	.+58     	; 0x1666 <vfprintf+0xd6>
    162c:	8d 32       	cpi	r24, 0x2D	; 45
    162e:	61 f0       	breq	.+24     	; 0x1648 <vfprintf+0xb8>
    1630:	80 33       	cpi	r24, 0x30	; 48
    1632:	69 f4       	brne	.+26     	; 0x164e <vfprintf+0xbe>
    1634:	23 2d       	mov	r18, r3
    1636:	21 60       	ori	r18, 0x01	; 1
    1638:	16 c0       	rjmp	.+44     	; 0x1666 <vfprintf+0xd6>
    163a:	83 2d       	mov	r24, r3
    163c:	82 60       	ori	r24, 0x02	; 2
    163e:	38 2e       	mov	r3, r24
    1640:	e3 2d       	mov	r30, r3
    1642:	e4 60       	ori	r30, 0x04	; 4
    1644:	3e 2e       	mov	r3, r30
    1646:	2a c0       	rjmp	.+84     	; 0x169c <vfprintf+0x10c>
    1648:	f3 2d       	mov	r31, r3
    164a:	f8 60       	ori	r31, 0x08	; 8
    164c:	1d c0       	rjmp	.+58     	; 0x1688 <vfprintf+0xf8>
    164e:	37 fc       	sbrc	r3, 7
    1650:	2d c0       	rjmp	.+90     	; 0x16ac <vfprintf+0x11c>
    1652:	20 ed       	ldi	r18, 0xD0	; 208
    1654:	28 0f       	add	r18, r24
    1656:	2a 30       	cpi	r18, 0x0A	; 10
    1658:	40 f0       	brcs	.+16     	; 0x166a <vfprintf+0xda>
    165a:	8e 32       	cpi	r24, 0x2E	; 46
    165c:	b9 f4       	brne	.+46     	; 0x168c <vfprintf+0xfc>
    165e:	36 fc       	sbrc	r3, 6
    1660:	75 c1       	rjmp	.+746    	; 0x194c <vfprintf+0x3bc>
    1662:	23 2d       	mov	r18, r3
    1664:	20 64       	ori	r18, 0x40	; 64
    1666:	32 2e       	mov	r3, r18
    1668:	19 c0       	rjmp	.+50     	; 0x169c <vfprintf+0x10c>
    166a:	36 fe       	sbrs	r3, 6
    166c:	06 c0       	rjmp	.+12     	; 0x167a <vfprintf+0xea>
    166e:	8a e0       	ldi	r24, 0x0A	; 10
    1670:	98 9e       	mul	r9, r24
    1672:	20 0d       	add	r18, r0
    1674:	11 24       	eor	r1, r1
    1676:	92 2e       	mov	r9, r18
    1678:	11 c0       	rjmp	.+34     	; 0x169c <vfprintf+0x10c>
    167a:	ea e0       	ldi	r30, 0x0A	; 10
    167c:	2e 9e       	mul	r2, r30
    167e:	20 0d       	add	r18, r0
    1680:	11 24       	eor	r1, r1
    1682:	22 2e       	mov	r2, r18
    1684:	f3 2d       	mov	r31, r3
    1686:	f0 62       	ori	r31, 0x20	; 32
    1688:	3f 2e       	mov	r3, r31
    168a:	08 c0       	rjmp	.+16     	; 0x169c <vfprintf+0x10c>
    168c:	8c 36       	cpi	r24, 0x6C	; 108
    168e:	21 f4       	brne	.+8      	; 0x1698 <vfprintf+0x108>
    1690:	83 2d       	mov	r24, r3
    1692:	80 68       	ori	r24, 0x80	; 128
    1694:	38 2e       	mov	r3, r24
    1696:	02 c0       	rjmp	.+4      	; 0x169c <vfprintf+0x10c>
    1698:	88 36       	cpi	r24, 0x68	; 104
    169a:	41 f4       	brne	.+16     	; 0x16ac <vfprintf+0x11c>
    169c:	f7 01       	movw	r30, r14
    169e:	93 fd       	sbrc	r25, 3
    16a0:	85 91       	lpm	r24, Z+
    16a2:	93 ff       	sbrs	r25, 3
    16a4:	81 91       	ld	r24, Z+
    16a6:	7f 01       	movw	r14, r30
    16a8:	81 11       	cpse	r24, r1
    16aa:	b3 cf       	rjmp	.-154    	; 0x1612 <vfprintf+0x82>
    16ac:	98 2f       	mov	r25, r24
    16ae:	9f 7d       	andi	r25, 0xDF	; 223
    16b0:	95 54       	subi	r25, 0x45	; 69
    16b2:	93 30       	cpi	r25, 0x03	; 3
    16b4:	28 f4       	brcc	.+10     	; 0x16c0 <vfprintf+0x130>
    16b6:	0c 5f       	subi	r16, 0xFC	; 252
    16b8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ba:	9f e3       	ldi	r25, 0x3F	; 63
    16bc:	99 83       	std	Y+1, r25	; 0x01
    16be:	0d c0       	rjmp	.+26     	; 0x16da <vfprintf+0x14a>
    16c0:	83 36       	cpi	r24, 0x63	; 99
    16c2:	31 f0       	breq	.+12     	; 0x16d0 <vfprintf+0x140>
    16c4:	83 37       	cpi	r24, 0x73	; 115
    16c6:	71 f0       	breq	.+28     	; 0x16e4 <vfprintf+0x154>
    16c8:	83 35       	cpi	r24, 0x53	; 83
    16ca:	09 f0       	breq	.+2      	; 0x16ce <vfprintf+0x13e>
    16cc:	55 c0       	rjmp	.+170    	; 0x1778 <vfprintf+0x1e8>
    16ce:	20 c0       	rjmp	.+64     	; 0x1710 <vfprintf+0x180>
    16d0:	f8 01       	movw	r30, r16
    16d2:	80 81       	ld	r24, Z
    16d4:	89 83       	std	Y+1, r24	; 0x01
    16d6:	0e 5f       	subi	r16, 0xFE	; 254
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	88 24       	eor	r8, r8
    16dc:	83 94       	inc	r8
    16de:	91 2c       	mov	r9, r1
    16e0:	53 01       	movw	r10, r6
    16e2:	12 c0       	rjmp	.+36     	; 0x1708 <vfprintf+0x178>
    16e4:	28 01       	movw	r4, r16
    16e6:	f2 e0       	ldi	r31, 0x02	; 2
    16e8:	4f 0e       	add	r4, r31
    16ea:	51 1c       	adc	r5, r1
    16ec:	f8 01       	movw	r30, r16
    16ee:	a0 80       	ld	r10, Z
    16f0:	b1 80       	ldd	r11, Z+1	; 0x01
    16f2:	36 fe       	sbrs	r3, 6
    16f4:	03 c0       	rjmp	.+6      	; 0x16fc <vfprintf+0x16c>
    16f6:	69 2d       	mov	r22, r9
    16f8:	70 e0       	ldi	r23, 0x00	; 0
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <vfprintf+0x170>
    16fc:	6f ef       	ldi	r22, 0xFF	; 255
    16fe:	7f ef       	ldi	r23, 0xFF	; 255
    1700:	c5 01       	movw	r24, r10
    1702:	4e d1       	rcall	.+668    	; 0x19a0 <strnlen>
    1704:	4c 01       	movw	r8, r24
    1706:	82 01       	movw	r16, r4
    1708:	f3 2d       	mov	r31, r3
    170a:	ff 77       	andi	r31, 0x7F	; 127
    170c:	3f 2e       	mov	r3, r31
    170e:	15 c0       	rjmp	.+42     	; 0x173a <vfprintf+0x1aa>
    1710:	28 01       	movw	r4, r16
    1712:	22 e0       	ldi	r18, 0x02	; 2
    1714:	42 0e       	add	r4, r18
    1716:	51 1c       	adc	r5, r1
    1718:	f8 01       	movw	r30, r16
    171a:	a0 80       	ld	r10, Z
    171c:	b1 80       	ldd	r11, Z+1	; 0x01
    171e:	36 fe       	sbrs	r3, 6
    1720:	03 c0       	rjmp	.+6      	; 0x1728 <vfprintf+0x198>
    1722:	69 2d       	mov	r22, r9
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	02 c0       	rjmp	.+4      	; 0x172c <vfprintf+0x19c>
    1728:	6f ef       	ldi	r22, 0xFF	; 255
    172a:	7f ef       	ldi	r23, 0xFF	; 255
    172c:	c5 01       	movw	r24, r10
    172e:	2d d1       	rcall	.+602    	; 0x198a <strnlen_P>
    1730:	4c 01       	movw	r8, r24
    1732:	f3 2d       	mov	r31, r3
    1734:	f0 68       	ori	r31, 0x80	; 128
    1736:	3f 2e       	mov	r3, r31
    1738:	82 01       	movw	r16, r4
    173a:	33 fc       	sbrc	r3, 3
    173c:	19 c0       	rjmp	.+50     	; 0x1770 <vfprintf+0x1e0>
    173e:	82 2d       	mov	r24, r2
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	88 16       	cp	r8, r24
    1744:	99 06       	cpc	r9, r25
    1746:	a0 f4       	brcc	.+40     	; 0x1770 <vfprintf+0x1e0>
    1748:	b6 01       	movw	r22, r12
    174a:	80 e2       	ldi	r24, 0x20	; 32
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	33 d1       	rcall	.+614    	; 0x19b6 <fputc>
    1750:	2a 94       	dec	r2
    1752:	f5 cf       	rjmp	.-22     	; 0x173e <vfprintf+0x1ae>
    1754:	f5 01       	movw	r30, r10
    1756:	37 fc       	sbrc	r3, 7
    1758:	85 91       	lpm	r24, Z+
    175a:	37 fe       	sbrs	r3, 7
    175c:	81 91       	ld	r24, Z+
    175e:	5f 01       	movw	r10, r30
    1760:	b6 01       	movw	r22, r12
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	28 d1       	rcall	.+592    	; 0x19b6 <fputc>
    1766:	21 10       	cpse	r2, r1
    1768:	2a 94       	dec	r2
    176a:	21 e0       	ldi	r18, 0x01	; 1
    176c:	82 1a       	sub	r8, r18
    176e:	91 08       	sbc	r9, r1
    1770:	81 14       	cp	r8, r1
    1772:	91 04       	cpc	r9, r1
    1774:	79 f7       	brne	.-34     	; 0x1754 <vfprintf+0x1c4>
    1776:	e1 c0       	rjmp	.+450    	; 0x193a <vfprintf+0x3aa>
    1778:	84 36       	cpi	r24, 0x64	; 100
    177a:	11 f0       	breq	.+4      	; 0x1780 <vfprintf+0x1f0>
    177c:	89 36       	cpi	r24, 0x69	; 105
    177e:	39 f5       	brne	.+78     	; 0x17ce <vfprintf+0x23e>
    1780:	f8 01       	movw	r30, r16
    1782:	37 fe       	sbrs	r3, 7
    1784:	07 c0       	rjmp	.+14     	; 0x1794 <vfprintf+0x204>
    1786:	60 81       	ld	r22, Z
    1788:	71 81       	ldd	r23, Z+1	; 0x01
    178a:	82 81       	ldd	r24, Z+2	; 0x02
    178c:	93 81       	ldd	r25, Z+3	; 0x03
    178e:	0c 5f       	subi	r16, 0xFC	; 252
    1790:	1f 4f       	sbci	r17, 0xFF	; 255
    1792:	08 c0       	rjmp	.+16     	; 0x17a4 <vfprintf+0x214>
    1794:	60 81       	ld	r22, Z
    1796:	71 81       	ldd	r23, Z+1	; 0x01
    1798:	07 2e       	mov	r0, r23
    179a:	00 0c       	add	r0, r0
    179c:	88 0b       	sbc	r24, r24
    179e:	99 0b       	sbc	r25, r25
    17a0:	0e 5f       	subi	r16, 0xFE	; 254
    17a2:	1f 4f       	sbci	r17, 0xFF	; 255
    17a4:	f3 2d       	mov	r31, r3
    17a6:	ff 76       	andi	r31, 0x6F	; 111
    17a8:	3f 2e       	mov	r3, r31
    17aa:	97 ff       	sbrs	r25, 7
    17ac:	09 c0       	rjmp	.+18     	; 0x17c0 <vfprintf+0x230>
    17ae:	90 95       	com	r25
    17b0:	80 95       	com	r24
    17b2:	70 95       	com	r23
    17b4:	61 95       	neg	r22
    17b6:	7f 4f       	sbci	r23, 0xFF	; 255
    17b8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	f0 68       	ori	r31, 0x80	; 128
    17be:	3f 2e       	mov	r3, r31
    17c0:	2a e0       	ldi	r18, 0x0A	; 10
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	a3 01       	movw	r20, r6
    17c6:	33 d1       	rcall	.+614    	; 0x1a2e <__ultoa_invert>
    17c8:	88 2e       	mov	r8, r24
    17ca:	86 18       	sub	r8, r6
    17cc:	44 c0       	rjmp	.+136    	; 0x1856 <vfprintf+0x2c6>
    17ce:	85 37       	cpi	r24, 0x75	; 117
    17d0:	31 f4       	brne	.+12     	; 0x17de <vfprintf+0x24e>
    17d2:	23 2d       	mov	r18, r3
    17d4:	2f 7e       	andi	r18, 0xEF	; 239
    17d6:	b2 2e       	mov	r11, r18
    17d8:	2a e0       	ldi	r18, 0x0A	; 10
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	25 c0       	rjmp	.+74     	; 0x1828 <vfprintf+0x298>
    17de:	93 2d       	mov	r25, r3
    17e0:	99 7f       	andi	r25, 0xF9	; 249
    17e2:	b9 2e       	mov	r11, r25
    17e4:	8f 36       	cpi	r24, 0x6F	; 111
    17e6:	c1 f0       	breq	.+48     	; 0x1818 <vfprintf+0x288>
    17e8:	18 f4       	brcc	.+6      	; 0x17f0 <vfprintf+0x260>
    17ea:	88 35       	cpi	r24, 0x58	; 88
    17ec:	79 f0       	breq	.+30     	; 0x180c <vfprintf+0x27c>
    17ee:	ae c0       	rjmp	.+348    	; 0x194c <vfprintf+0x3bc>
    17f0:	80 37       	cpi	r24, 0x70	; 112
    17f2:	19 f0       	breq	.+6      	; 0x17fa <vfprintf+0x26a>
    17f4:	88 37       	cpi	r24, 0x78	; 120
    17f6:	21 f0       	breq	.+8      	; 0x1800 <vfprintf+0x270>
    17f8:	a9 c0       	rjmp	.+338    	; 0x194c <vfprintf+0x3bc>
    17fa:	e9 2f       	mov	r30, r25
    17fc:	e0 61       	ori	r30, 0x10	; 16
    17fe:	be 2e       	mov	r11, r30
    1800:	b4 fe       	sbrs	r11, 4
    1802:	0d c0       	rjmp	.+26     	; 0x181e <vfprintf+0x28e>
    1804:	fb 2d       	mov	r31, r11
    1806:	f4 60       	ori	r31, 0x04	; 4
    1808:	bf 2e       	mov	r11, r31
    180a:	09 c0       	rjmp	.+18     	; 0x181e <vfprintf+0x28e>
    180c:	34 fe       	sbrs	r3, 4
    180e:	0a c0       	rjmp	.+20     	; 0x1824 <vfprintf+0x294>
    1810:	29 2f       	mov	r18, r25
    1812:	26 60       	ori	r18, 0x06	; 6
    1814:	b2 2e       	mov	r11, r18
    1816:	06 c0       	rjmp	.+12     	; 0x1824 <vfprintf+0x294>
    1818:	28 e0       	ldi	r18, 0x08	; 8
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	05 c0       	rjmp	.+10     	; 0x1828 <vfprintf+0x298>
    181e:	20 e1       	ldi	r18, 0x10	; 16
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <vfprintf+0x298>
    1824:	20 e1       	ldi	r18, 0x10	; 16
    1826:	32 e0       	ldi	r19, 0x02	; 2
    1828:	f8 01       	movw	r30, r16
    182a:	b7 fe       	sbrs	r11, 7
    182c:	07 c0       	rjmp	.+14     	; 0x183c <vfprintf+0x2ac>
    182e:	60 81       	ld	r22, Z
    1830:	71 81       	ldd	r23, Z+1	; 0x01
    1832:	82 81       	ldd	r24, Z+2	; 0x02
    1834:	93 81       	ldd	r25, Z+3	; 0x03
    1836:	0c 5f       	subi	r16, 0xFC	; 252
    1838:	1f 4f       	sbci	r17, 0xFF	; 255
    183a:	06 c0       	rjmp	.+12     	; 0x1848 <vfprintf+0x2b8>
    183c:	60 81       	ld	r22, Z
    183e:	71 81       	ldd	r23, Z+1	; 0x01
    1840:	80 e0       	ldi	r24, 0x00	; 0
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	0e 5f       	subi	r16, 0xFE	; 254
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	a3 01       	movw	r20, r6
    184a:	f1 d0       	rcall	.+482    	; 0x1a2e <__ultoa_invert>
    184c:	88 2e       	mov	r8, r24
    184e:	86 18       	sub	r8, r6
    1850:	fb 2d       	mov	r31, r11
    1852:	ff 77       	andi	r31, 0x7F	; 127
    1854:	3f 2e       	mov	r3, r31
    1856:	36 fe       	sbrs	r3, 6
    1858:	0d c0       	rjmp	.+26     	; 0x1874 <vfprintf+0x2e4>
    185a:	23 2d       	mov	r18, r3
    185c:	2e 7f       	andi	r18, 0xFE	; 254
    185e:	a2 2e       	mov	r10, r18
    1860:	89 14       	cp	r8, r9
    1862:	58 f4       	brcc	.+22     	; 0x187a <vfprintf+0x2ea>
    1864:	34 fe       	sbrs	r3, 4
    1866:	0b c0       	rjmp	.+22     	; 0x187e <vfprintf+0x2ee>
    1868:	32 fc       	sbrc	r3, 2
    186a:	09 c0       	rjmp	.+18     	; 0x187e <vfprintf+0x2ee>
    186c:	83 2d       	mov	r24, r3
    186e:	8e 7e       	andi	r24, 0xEE	; 238
    1870:	a8 2e       	mov	r10, r24
    1872:	05 c0       	rjmp	.+10     	; 0x187e <vfprintf+0x2ee>
    1874:	b8 2c       	mov	r11, r8
    1876:	a3 2c       	mov	r10, r3
    1878:	03 c0       	rjmp	.+6      	; 0x1880 <vfprintf+0x2f0>
    187a:	b8 2c       	mov	r11, r8
    187c:	01 c0       	rjmp	.+2      	; 0x1880 <vfprintf+0x2f0>
    187e:	b9 2c       	mov	r11, r9
    1880:	a4 fe       	sbrs	r10, 4
    1882:	0f c0       	rjmp	.+30     	; 0x18a2 <vfprintf+0x312>
    1884:	fe 01       	movw	r30, r28
    1886:	e8 0d       	add	r30, r8
    1888:	f1 1d       	adc	r31, r1
    188a:	80 81       	ld	r24, Z
    188c:	80 33       	cpi	r24, 0x30	; 48
    188e:	21 f4       	brne	.+8      	; 0x1898 <vfprintf+0x308>
    1890:	9a 2d       	mov	r25, r10
    1892:	99 7e       	andi	r25, 0xE9	; 233
    1894:	a9 2e       	mov	r10, r25
    1896:	09 c0       	rjmp	.+18     	; 0x18aa <vfprintf+0x31a>
    1898:	a2 fe       	sbrs	r10, 2
    189a:	06 c0       	rjmp	.+12     	; 0x18a8 <vfprintf+0x318>
    189c:	b3 94       	inc	r11
    189e:	b3 94       	inc	r11
    18a0:	04 c0       	rjmp	.+8      	; 0x18aa <vfprintf+0x31a>
    18a2:	8a 2d       	mov	r24, r10
    18a4:	86 78       	andi	r24, 0x86	; 134
    18a6:	09 f0       	breq	.+2      	; 0x18aa <vfprintf+0x31a>
    18a8:	b3 94       	inc	r11
    18aa:	a3 fc       	sbrc	r10, 3
    18ac:	10 c0       	rjmp	.+32     	; 0x18ce <vfprintf+0x33e>
    18ae:	a0 fe       	sbrs	r10, 0
    18b0:	06 c0       	rjmp	.+12     	; 0x18be <vfprintf+0x32e>
    18b2:	b2 14       	cp	r11, r2
    18b4:	80 f4       	brcc	.+32     	; 0x18d6 <vfprintf+0x346>
    18b6:	28 0c       	add	r2, r8
    18b8:	92 2c       	mov	r9, r2
    18ba:	9b 18       	sub	r9, r11
    18bc:	0d c0       	rjmp	.+26     	; 0x18d8 <vfprintf+0x348>
    18be:	b2 14       	cp	r11, r2
    18c0:	58 f4       	brcc	.+22     	; 0x18d8 <vfprintf+0x348>
    18c2:	b6 01       	movw	r22, r12
    18c4:	80 e2       	ldi	r24, 0x20	; 32
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	76 d0       	rcall	.+236    	; 0x19b6 <fputc>
    18ca:	b3 94       	inc	r11
    18cc:	f8 cf       	rjmp	.-16     	; 0x18be <vfprintf+0x32e>
    18ce:	b2 14       	cp	r11, r2
    18d0:	18 f4       	brcc	.+6      	; 0x18d8 <vfprintf+0x348>
    18d2:	2b 18       	sub	r2, r11
    18d4:	02 c0       	rjmp	.+4      	; 0x18da <vfprintf+0x34a>
    18d6:	98 2c       	mov	r9, r8
    18d8:	21 2c       	mov	r2, r1
    18da:	a4 fe       	sbrs	r10, 4
    18dc:	0f c0       	rjmp	.+30     	; 0x18fc <vfprintf+0x36c>
    18de:	b6 01       	movw	r22, r12
    18e0:	80 e3       	ldi	r24, 0x30	; 48
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	68 d0       	rcall	.+208    	; 0x19b6 <fputc>
    18e6:	a2 fe       	sbrs	r10, 2
    18e8:	16 c0       	rjmp	.+44     	; 0x1916 <vfprintf+0x386>
    18ea:	a1 fc       	sbrc	r10, 1
    18ec:	03 c0       	rjmp	.+6      	; 0x18f4 <vfprintf+0x364>
    18ee:	88 e7       	ldi	r24, 0x78	; 120
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	02 c0       	rjmp	.+4      	; 0x18f8 <vfprintf+0x368>
    18f4:	88 e5       	ldi	r24, 0x58	; 88
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	b6 01       	movw	r22, r12
    18fa:	0c c0       	rjmp	.+24     	; 0x1914 <vfprintf+0x384>
    18fc:	8a 2d       	mov	r24, r10
    18fe:	86 78       	andi	r24, 0x86	; 134
    1900:	51 f0       	breq	.+20     	; 0x1916 <vfprintf+0x386>
    1902:	a1 fe       	sbrs	r10, 1
    1904:	02 c0       	rjmp	.+4      	; 0x190a <vfprintf+0x37a>
    1906:	8b e2       	ldi	r24, 0x2B	; 43
    1908:	01 c0       	rjmp	.+2      	; 0x190c <vfprintf+0x37c>
    190a:	80 e2       	ldi	r24, 0x20	; 32
    190c:	a7 fc       	sbrc	r10, 7
    190e:	8d e2       	ldi	r24, 0x2D	; 45
    1910:	b6 01       	movw	r22, r12
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	50 d0       	rcall	.+160    	; 0x19b6 <fputc>
    1916:	89 14       	cp	r8, r9
    1918:	30 f4       	brcc	.+12     	; 0x1926 <vfprintf+0x396>
    191a:	b6 01       	movw	r22, r12
    191c:	80 e3       	ldi	r24, 0x30	; 48
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	4a d0       	rcall	.+148    	; 0x19b6 <fputc>
    1922:	9a 94       	dec	r9
    1924:	f8 cf       	rjmp	.-16     	; 0x1916 <vfprintf+0x386>
    1926:	8a 94       	dec	r8
    1928:	f3 01       	movw	r30, r6
    192a:	e8 0d       	add	r30, r8
    192c:	f1 1d       	adc	r31, r1
    192e:	80 81       	ld	r24, Z
    1930:	b6 01       	movw	r22, r12
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	40 d0       	rcall	.+128    	; 0x19b6 <fputc>
    1936:	81 10       	cpse	r8, r1
    1938:	f6 cf       	rjmp	.-20     	; 0x1926 <vfprintf+0x396>
    193a:	22 20       	and	r2, r2
    193c:	09 f4       	brne	.+2      	; 0x1940 <vfprintf+0x3b0>
    193e:	4e ce       	rjmp	.-868    	; 0x15dc <vfprintf+0x4c>
    1940:	b6 01       	movw	r22, r12
    1942:	80 e2       	ldi	r24, 0x20	; 32
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	37 d0       	rcall	.+110    	; 0x19b6 <fputc>
    1948:	2a 94       	dec	r2
    194a:	f7 cf       	rjmp	.-18     	; 0x193a <vfprintf+0x3aa>
    194c:	f6 01       	movw	r30, r12
    194e:	86 81       	ldd	r24, Z+6	; 0x06
    1950:	97 81       	ldd	r25, Z+7	; 0x07
    1952:	02 c0       	rjmp	.+4      	; 0x1958 <vfprintf+0x3c8>
    1954:	8f ef       	ldi	r24, 0xFF	; 255
    1956:	9f ef       	ldi	r25, 0xFF	; 255
    1958:	2b 96       	adiw	r28, 0x0b	; 11
    195a:	0f b6       	in	r0, 0x3f	; 63
    195c:	f8 94       	cli
    195e:	de bf       	out	0x3e, r29	; 62
    1960:	0f be       	out	0x3f, r0	; 63
    1962:	cd bf       	out	0x3d, r28	; 61
    1964:	df 91       	pop	r29
    1966:	cf 91       	pop	r28
    1968:	1f 91       	pop	r17
    196a:	0f 91       	pop	r16
    196c:	ff 90       	pop	r15
    196e:	ef 90       	pop	r14
    1970:	df 90       	pop	r13
    1972:	cf 90       	pop	r12
    1974:	bf 90       	pop	r11
    1976:	af 90       	pop	r10
    1978:	9f 90       	pop	r9
    197a:	8f 90       	pop	r8
    197c:	7f 90       	pop	r7
    197e:	6f 90       	pop	r6
    1980:	5f 90       	pop	r5
    1982:	4f 90       	pop	r4
    1984:	3f 90       	pop	r3
    1986:	2f 90       	pop	r2
    1988:	08 95       	ret

0000198a <strnlen_P>:
    198a:	fc 01       	movw	r30, r24
    198c:	05 90       	lpm	r0, Z+
    198e:	61 50       	subi	r22, 0x01	; 1
    1990:	70 40       	sbci	r23, 0x00	; 0
    1992:	01 10       	cpse	r0, r1
    1994:	d8 f7       	brcc	.-10     	; 0x198c <strnlen_P+0x2>
    1996:	80 95       	com	r24
    1998:	90 95       	com	r25
    199a:	8e 0f       	add	r24, r30
    199c:	9f 1f       	adc	r25, r31
    199e:	08 95       	ret

000019a0 <strnlen>:
    19a0:	fc 01       	movw	r30, r24
    19a2:	61 50       	subi	r22, 0x01	; 1
    19a4:	70 40       	sbci	r23, 0x00	; 0
    19a6:	01 90       	ld	r0, Z+
    19a8:	01 10       	cpse	r0, r1
    19aa:	d8 f7       	brcc	.-10     	; 0x19a2 <strnlen+0x2>
    19ac:	80 95       	com	r24
    19ae:	90 95       	com	r25
    19b0:	8e 0f       	add	r24, r30
    19b2:	9f 1f       	adc	r25, r31
    19b4:	08 95       	ret

000019b6 <fputc>:
    19b6:	0f 93       	push	r16
    19b8:	1f 93       	push	r17
    19ba:	cf 93       	push	r28
    19bc:	df 93       	push	r29
    19be:	fb 01       	movw	r30, r22
    19c0:	23 81       	ldd	r18, Z+3	; 0x03
    19c2:	21 fd       	sbrc	r18, 1
    19c4:	03 c0       	rjmp	.+6      	; 0x19cc <fputc+0x16>
    19c6:	8f ef       	ldi	r24, 0xFF	; 255
    19c8:	9f ef       	ldi	r25, 0xFF	; 255
    19ca:	2c c0       	rjmp	.+88     	; 0x1a24 <fputc+0x6e>
    19cc:	22 ff       	sbrs	r18, 2
    19ce:	16 c0       	rjmp	.+44     	; 0x19fc <fputc+0x46>
    19d0:	46 81       	ldd	r20, Z+6	; 0x06
    19d2:	57 81       	ldd	r21, Z+7	; 0x07
    19d4:	24 81       	ldd	r18, Z+4	; 0x04
    19d6:	35 81       	ldd	r19, Z+5	; 0x05
    19d8:	42 17       	cp	r20, r18
    19da:	53 07       	cpc	r21, r19
    19dc:	44 f4       	brge	.+16     	; 0x19ee <fputc+0x38>
    19de:	a0 81       	ld	r26, Z
    19e0:	b1 81       	ldd	r27, Z+1	; 0x01
    19e2:	9d 01       	movw	r18, r26
    19e4:	2f 5f       	subi	r18, 0xFF	; 255
    19e6:	3f 4f       	sbci	r19, 0xFF	; 255
    19e8:	31 83       	std	Z+1, r19	; 0x01
    19ea:	20 83       	st	Z, r18
    19ec:	8c 93       	st	X, r24
    19ee:	26 81       	ldd	r18, Z+6	; 0x06
    19f0:	37 81       	ldd	r19, Z+7	; 0x07
    19f2:	2f 5f       	subi	r18, 0xFF	; 255
    19f4:	3f 4f       	sbci	r19, 0xFF	; 255
    19f6:	37 83       	std	Z+7, r19	; 0x07
    19f8:	26 83       	std	Z+6, r18	; 0x06
    19fa:	14 c0       	rjmp	.+40     	; 0x1a24 <fputc+0x6e>
    19fc:	8b 01       	movw	r16, r22
    19fe:	ec 01       	movw	r28, r24
    1a00:	fb 01       	movw	r30, r22
    1a02:	00 84       	ldd	r0, Z+8	; 0x08
    1a04:	f1 85       	ldd	r31, Z+9	; 0x09
    1a06:	e0 2d       	mov	r30, r0
    1a08:	09 95       	icall
    1a0a:	89 2b       	or	r24, r25
    1a0c:	e1 f6       	brne	.-72     	; 0x19c6 <fputc+0x10>
    1a0e:	d8 01       	movw	r26, r16
    1a10:	16 96       	adiw	r26, 0x06	; 6
    1a12:	8d 91       	ld	r24, X+
    1a14:	9c 91       	ld	r25, X
    1a16:	17 97       	sbiw	r26, 0x07	; 7
    1a18:	01 96       	adiw	r24, 0x01	; 1
    1a1a:	17 96       	adiw	r26, 0x07	; 7
    1a1c:	9c 93       	st	X, r25
    1a1e:	8e 93       	st	-X, r24
    1a20:	16 97       	sbiw	r26, 0x06	; 6
    1a22:	ce 01       	movw	r24, r28
    1a24:	df 91       	pop	r29
    1a26:	cf 91       	pop	r28
    1a28:	1f 91       	pop	r17
    1a2a:	0f 91       	pop	r16
    1a2c:	08 95       	ret

00001a2e <__ultoa_invert>:
    1a2e:	fa 01       	movw	r30, r20
    1a30:	aa 27       	eor	r26, r26
    1a32:	28 30       	cpi	r18, 0x08	; 8
    1a34:	51 f1       	breq	.+84     	; 0x1a8a <__ultoa_invert+0x5c>
    1a36:	20 31       	cpi	r18, 0x10	; 16
    1a38:	81 f1       	breq	.+96     	; 0x1a9a <__ultoa_invert+0x6c>
    1a3a:	e8 94       	clt
    1a3c:	6f 93       	push	r22
    1a3e:	6e 7f       	andi	r22, 0xFE	; 254
    1a40:	6e 5f       	subi	r22, 0xFE	; 254
    1a42:	7f 4f       	sbci	r23, 0xFF	; 255
    1a44:	8f 4f       	sbci	r24, 0xFF	; 255
    1a46:	9f 4f       	sbci	r25, 0xFF	; 255
    1a48:	af 4f       	sbci	r26, 0xFF	; 255
    1a4a:	b1 e0       	ldi	r27, 0x01	; 1
    1a4c:	3e d0       	rcall	.+124    	; 0x1aca <__ultoa_invert+0x9c>
    1a4e:	b4 e0       	ldi	r27, 0x04	; 4
    1a50:	3c d0       	rcall	.+120    	; 0x1aca <__ultoa_invert+0x9c>
    1a52:	67 0f       	add	r22, r23
    1a54:	78 1f       	adc	r23, r24
    1a56:	89 1f       	adc	r24, r25
    1a58:	9a 1f       	adc	r25, r26
    1a5a:	a1 1d       	adc	r26, r1
    1a5c:	68 0f       	add	r22, r24
    1a5e:	79 1f       	adc	r23, r25
    1a60:	8a 1f       	adc	r24, r26
    1a62:	91 1d       	adc	r25, r1
    1a64:	a1 1d       	adc	r26, r1
    1a66:	6a 0f       	add	r22, r26
    1a68:	71 1d       	adc	r23, r1
    1a6a:	81 1d       	adc	r24, r1
    1a6c:	91 1d       	adc	r25, r1
    1a6e:	a1 1d       	adc	r26, r1
    1a70:	20 d0       	rcall	.+64     	; 0x1ab2 <__ultoa_invert+0x84>
    1a72:	09 f4       	brne	.+2      	; 0x1a76 <__ultoa_invert+0x48>
    1a74:	68 94       	set
    1a76:	3f 91       	pop	r19
    1a78:	2a e0       	ldi	r18, 0x0A	; 10
    1a7a:	26 9f       	mul	r18, r22
    1a7c:	11 24       	eor	r1, r1
    1a7e:	30 19       	sub	r19, r0
    1a80:	30 5d       	subi	r19, 0xD0	; 208
    1a82:	31 93       	st	Z+, r19
    1a84:	de f6       	brtc	.-74     	; 0x1a3c <__ultoa_invert+0xe>
    1a86:	cf 01       	movw	r24, r30
    1a88:	08 95       	ret
    1a8a:	46 2f       	mov	r20, r22
    1a8c:	47 70       	andi	r20, 0x07	; 7
    1a8e:	40 5d       	subi	r20, 0xD0	; 208
    1a90:	41 93       	st	Z+, r20
    1a92:	b3 e0       	ldi	r27, 0x03	; 3
    1a94:	0f d0       	rcall	.+30     	; 0x1ab4 <__ultoa_invert+0x86>
    1a96:	c9 f7       	brne	.-14     	; 0x1a8a <__ultoa_invert+0x5c>
    1a98:	f6 cf       	rjmp	.-20     	; 0x1a86 <__ultoa_invert+0x58>
    1a9a:	46 2f       	mov	r20, r22
    1a9c:	4f 70       	andi	r20, 0x0F	; 15
    1a9e:	40 5d       	subi	r20, 0xD0	; 208
    1aa0:	4a 33       	cpi	r20, 0x3A	; 58
    1aa2:	18 f0       	brcs	.+6      	; 0x1aaa <__ultoa_invert+0x7c>
    1aa4:	49 5d       	subi	r20, 0xD9	; 217
    1aa6:	31 fd       	sbrc	r19, 1
    1aa8:	40 52       	subi	r20, 0x20	; 32
    1aaa:	41 93       	st	Z+, r20
    1aac:	02 d0       	rcall	.+4      	; 0x1ab2 <__ultoa_invert+0x84>
    1aae:	a9 f7       	brne	.-22     	; 0x1a9a <__ultoa_invert+0x6c>
    1ab0:	ea cf       	rjmp	.-44     	; 0x1a86 <__ultoa_invert+0x58>
    1ab2:	b4 e0       	ldi	r27, 0x04	; 4
    1ab4:	a6 95       	lsr	r26
    1ab6:	97 95       	ror	r25
    1ab8:	87 95       	ror	r24
    1aba:	77 95       	ror	r23
    1abc:	67 95       	ror	r22
    1abe:	ba 95       	dec	r27
    1ac0:	c9 f7       	brne	.-14     	; 0x1ab4 <__ultoa_invert+0x86>
    1ac2:	00 97       	sbiw	r24, 0x00	; 0
    1ac4:	61 05       	cpc	r22, r1
    1ac6:	71 05       	cpc	r23, r1
    1ac8:	08 95       	ret
    1aca:	9b 01       	movw	r18, r22
    1acc:	ac 01       	movw	r20, r24
    1ace:	0a 2e       	mov	r0, r26
    1ad0:	06 94       	lsr	r0
    1ad2:	57 95       	ror	r21
    1ad4:	47 95       	ror	r20
    1ad6:	37 95       	ror	r19
    1ad8:	27 95       	ror	r18
    1ada:	ba 95       	dec	r27
    1adc:	c9 f7       	brne	.-14     	; 0x1ad0 <__ultoa_invert+0xa2>
    1ade:	62 0f       	add	r22, r18
    1ae0:	73 1f       	adc	r23, r19
    1ae2:	84 1f       	adc	r24, r20
    1ae4:	95 1f       	adc	r25, r21
    1ae6:	a0 1d       	adc	r26, r0
    1ae8:	08 95       	ret

00001aea <_exit>:
    1aea:	f8 94       	cli

00001aec <__stop_program>:
    1aec:	ff cf       	rjmp	.-2      	; 0x1aec <__stop_program>
